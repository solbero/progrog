{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Velkommen til ProgRog \u00d8nsker du \u00e5 l\u00e6re om spennende, ny teknologi, men vet du ikke hvor du skal begynne? P\u00e5 ProgRog vil du finne kjekke oppskifter som viser deg hvordan du kan lage kule ting med ny teknologi. Oppskriftene er skrevet for deg som er fra 10 til 16 \u00e5r gammel. Det er meningen at du kan f\u00f8lge oppskriftene p\u00e5 egenh\u00e5nd, men av og til kan det v\u00e6re lurt \u00e5 sp\u00f8rre en voksen. Alle oppskiftene begynner med en video som du b\u00f8r se f\u00f8r du begynner. Hva du trenger av utstyr og hva du kommer til \u00e5 l\u00e6re st\u00e5r ogs\u00e5 i begynnelsen av hver oppskrift.","title":"Velkommen"},{"location":"#velkommen-til-progrog","text":"\u00d8nsker du \u00e5 l\u00e6re om spennende, ny teknologi, men vet du ikke hvor du skal begynne? P\u00e5 ProgRog vil du finne kjekke oppskifter som viser deg hvordan du kan lage kule ting med ny teknologi. Oppskriftene er skrevet for deg som er fra 10 til 16 \u00e5r gammel. Det er meningen at du kan f\u00f8lge oppskriftene p\u00e5 egenh\u00e5nd, men av og til kan det v\u00e6re lurt \u00e5 sp\u00f8rre en voksen. Alle oppskiftene begynner med en video som du b\u00f8r se f\u00f8r du begynner. Hva du trenger av utstyr og hva du kommer til \u00e5 l\u00e6re st\u00e5r ogs\u00e5 i begynnelsen av hver oppskrift.","title":"Velkommen til ProgRog"},{"location":"kontakt/","text":"Har du funnet en feil i en oppskrift? Har du et godt forslag til en forbedring p\u00e5 nettsiden? Eller \u00f8nsker du svar p\u00e5 et sp\u00f8rsm\u00e5l? Da kan du sende en e-post til .","title":"Kontakt"},{"location":"om/","text":"Om ProgRog Mitt navn er Njord og jeg er l\u00e6rer p\u00e5 barneskolen, men p\u00e5 fritiden er jeg en maker . Det betyr at jeg elsker \u00e5 lage ting og \u00e5 l\u00e6re om ny teknologi. ProgRog er nettsiden der jeg deler oppskriftene p\u00e5 tingene jeg lager. Mitt m\u00e5l er \u00e5 inspirere deg til \u00e5 bli mer nysgjerrig og finne gleden i \u00e5 skape med ny teknologi.","title":"Om"},{"location":"om/#om-progrog","text":"Mitt navn er Njord og jeg er l\u00e6rer p\u00e5 barneskolen, men p\u00e5 fritiden er jeg en maker . Det betyr at jeg elsker \u00e5 lage ting og \u00e5 l\u00e6re om ny teknologi. ProgRog er nettsiden der jeg deler oppskriftene p\u00e5 tingene jeg lager. Mitt m\u00e5l er \u00e5 inspirere deg til \u00e5 bli mer nysgjerrig og finne gleden i \u00e5 skape med ny teknologi.","title":"Om ProgRog"},{"location":"prosjekter/microbit/reaksjonsspill/","text":"Lag et reaksjonsspill med Micro Bit Introduksjon Dette er en oppskrift som passer for deg som har programmert litt p\u00e5 Micro Bit fra f\u00f8r. Oppskriften tar omtrent en time \u00e5 gjennomf\u00f8re. Du skal i denne oppskriften lage et reaksjonsspill for to spillere. Du vil l\u00e6re \u00e5 vise piler p\u00e5 skjermen til Micro Biten n\u00e5r en knapp trykkes \u00e5 lage en n\u00f8yaktig nedtelling \u00e5 programmere spilleregler \u00e5 bruke en variabel til \u00e5 huske om noe har skjedd Du trenger en Micro Bit en USB-kabel til overf\u00f8ring en batteripakke med to AAA-batterier Steg 1: Vis en pil p\u00e5 skjermen til Micro Biten n\u00e5r en knapp trykkes I dette steget skal vi fortelle Micro Biten at den skal vise en pil p\u00e5 skjermen n\u00e5r en knapp trykkes. Pilen skal peke mot knappen som ble trykt. Begynn med \u00e5 \u00e5pne nettsiden MakeCode for micro:bit . Trykk p\u00e5 knappen Nytt Prosjekt for \u00e5 starte et nytt prosjekt. Gi prosjektet navnet Reaksjonsspill for to spillere ved \u00e5 skrive i tekstfeltet nederst p\u00e5 siden. Slett alle klossene som ligger i l\u00e6rretet. Du sletter en kloss ved \u00e5 dra den til venstre over kategoriene. Slipp klossen n\u00e5r s\u00f8plespannet vises for \u00e5 slette den. Da er vi klar til \u00e5 begynne \u00e5 kode! F\u00f8rst skal vi lage pilen som peker mot A-knappen n\u00e5r den trykkes. Dra klossen n\u00e5r knapp A trykkes fra kategorien Inndata og slipp den et sted p\u00e5 l\u00e6rretet. Finn klossen vis bilde i kategorien Basis . Ta tak i klossen og plasser den i munnen til n\u00e5r A trykkes . Tegn en pil p\u00e5 vis bilde -klossen ved \u00e5 trykke p\u00e5 de sm\u00e5 firkantene. Pass p\u00e5 at pilen peker til venstre! input.onButtonPressed(Button.A, function () { basic.showLeds(` . . # . . . # . . . # # # # # . # . . . . . # . . `) }) Da skal vi lage pilen som peker mot B-knappen n\u00e5r den trykkes. Dra klossen n\u00e5r knapp A trykkes fra kategorien Inndata og slipp den et sted p\u00e5 l\u00e6rretet. Trykk p\u00e5 A p\u00e5 n\u00e5r knapp A trykkes og velg B fra rullegardinmenyen. Finn klossen vis bilde og plasser den i munnen til n\u00e5r B trykkes . Tegn en pil som peker mot h\u00f8yre p\u00e5 vis bilde -klossen ved \u00e5 trykke p\u00e5 de sm\u00e5 firkantene. input.onButtonPressed(Button.A, function () { basic.showLeds(` . . # . . . # . . . # # # # # . # . . . . . # . . `) }) input.onButtonPressed(Button.B, function () { basic.showLeds(` . . # . . . . . # . # # # # # . . . # . . . # . . `) }) Test programmet Til venstre er det bilde av en Micro Bit. Denne kan du bruke til \u00e5 teste programmet ditt mens du koder. Trykk p\u00e5 A -knappen, da skal det vises en pil p\u00e5 skjermen som peker mot venstre. Etterp\u00e5 pr\u00f8ver du \u00e5 trykke p\u00e5 B -knappen. Da skal det vises en pil mot h\u00f8yre. Det virker ikke! Peker ikke pilene mot knappene n\u00e5r du trykker p\u00e5 dem? Da er noe galt i koden din. For \u00e5 finne feilen b\u00f8r du lese oppskriften om igjen og se n\u00f8ye p\u00e5 bildene. Steg 2: Lag en tilfeldig nedtelling Vi vil at en prikk skal vises p\u00e5 skjermen til Micro Biten n\u00e5r reaksjonspillet begynner. P\u00e5 et tilfeldig tidspunkt mellom null til fem sekunder skal denne prikken bli til en firkant. For \u00e5 f\u00e5 til dette m\u00e5 vi lage en tilfeldig nedtelling. For \u00e5 lage en tilfeldig nedtelling m\u00e5 reaksjonsspillet huske tre tidspunkter: N\u00e5r nedtellingen starter Hvor lenge nedtellingen varer N\u00e5r nedtellingen slutter Disse tre tidspunktene skal reaksjonsspillet huske med \u00e5 bruke tre variabler. Vi begynner med \u00e5 lage variablene vi trenger. Legg merke til at klossene fra forrige steg vil fortsatt v\u00e6re i l\u00e6rretet ditt p\u00e5 MakeCode. De skal ikke slettes selv om kun klossene for dette steget vises under. Ta klossen ved start fra kategorien Basis og plasser den p\u00e5 l\u00e6rretet. Trykk p\u00e5 kategorien Variabler og deretter p\u00e5 knappen Lag en variabel . I tekstfeltet som vises p\u00e5 skjermen skriver du starttid . Plasser klossen sett starttid til 0 i munnen til ved start . let starttid = 0 Lag to variabler til i Variabel -kategorien ved \u00e5 trykke p\u00e5 Lag en variabel . Den ene variabelen skal hete ventetid og den andre skal hete sluttid . Plasser sett ventetid til 0 og sett sluttid til 0 i munnen til n\u00e5r starter . Klossene sett \u2026 til 0 og endre \u2026 med 0 i kategorien Variabler viser alltid navnet til den siste variabelen du laget. For \u00e5 skifte navnet p\u00e5 en variabel-kloss m\u00e5 du dra klossen ut i l\u00e6rretet og deretter trykke p\u00e5 firkanten som er rundt navnet p\u00e5 klossen. I rullegradinmenyen som da vises vil du kunne velge riktig variabel. let starttid = 0 let ventetid = 0 let sluttid = 0 Finn klossen kj\u00f8retid (ms) og plasser den p\u00e5 verdifeltet til sett starttid til 0 . For \u00e5 finne denne klossen m\u00e5 du f\u00f8rst trykke p\u00e5 kategorien Inndata . N\u00e5r du har trykket p\u00e5 kategorien vil det dukke opp en kategori under Inndata som heter \u22ef more . Trykk p\u00e5 den nye kategorien for \u00e5 finne kj\u00f8retid (ms) . let starttid = input.runningTime() let ventetid = 0 let sluttid = 0 Finn klossen velg tilfeldig 0 til 10 fra kategorien Matematikk . Plasser den i verdifeltet til sett ventetid til 0 . Skift tallet 10 til 5000 p\u00e5 velg tilfeldig 0 til 10 -klossen. Klossen velg tilfeldig 0 til 5000 vil n\u00e5 velge en tilfeldig ventetid mellom 0 og 5000 millisekunder. Et millisekund er et tusenedelssekund. Det betyr at 5000 millisekunder er det samme som 5 sekunder. }) let starttid = input.runningTime() let ventetid = Math.randomRange(0, 5000) let sluttid = 0 N\u00e5 skal vi regne ut sluttiden for nedtellingen. Den regner vi ut ved \u00e5 summere starttid og ventetid variablene. Ta klossen 0 + 0 fra Matematikk -kategorien og plasser den p\u00e5 verdifetet til sett sluttid til 0 . Plasser variabelene starttid og ventetid p\u00e5 verdifeltene til klossen 0 = 0 . let starttid = input.runningTime() let ventetid = Math.randomRange(0, 5000) let sluttid = starttid + ventetid Til slutt skal vi lage en prikken som skifter til en firkant p\u00e5 skjermen n\u00e5r ventetiden er l\u00f8pt ut. Begynn med \u00e5 plassere to vis bilde -klosser i munnen til n\u00e5r starter klossen . Pass p\u00e5 at begge klossene plasseres under variablene. Tegn en prikk p\u00e5 den \u00f8verste vis bilde -klossen og en firkant p\u00e5 den nederste vis bilde -klossen. Plasser deretter klossen pause (ms) 0 fra Basis -kategorien mellom de to vis bilde -klossene. Plasser variabelen ventetid p\u00e5 verdifeltet til pause (ms) 0 -klossen. let starttid = input.runningTime() let ventetid = Math.randomRange(0, 5000) let sluttid = starttid + ventetid basic.showLeds(` . . . . . . . . . . . . # . . . . . . . . . . . . `) basic.pause(ventetid) basic.showLeds(` . . . . . . # # # . . # . # . . # # # . . . . . . `) Test programmet Micro Biten til venstre p\u00e5 MakeCode skal n\u00e5 vise en prikk som blir til en firkant p\u00e5 et tilfeldig tidspunkt. Trykk p\u00e5 \ud83d\udd03 under Micro Biten for \u00e5 kj\u00f8re koden igjen. Tiden det tar f\u00f8r prikken blir en forkant skal v\u00e6re ulik hver gang du trykker p\u00e5 \ud83d\udd03 . Det virker ikke! Hvis ikke prikken blir til en firkant p\u00e5 Micro Biten s\u00e5 er noe galt i koden din. For \u00e5 finne feilen b\u00f8r du se n\u00f8ye p\u00e5 bildene i oppskriften og sammenligne dem med din kode. En vanlig feil er \u00e5 plassere gale klosser p\u00e5 verdifeltene til sett \u2026 til -klossene Utfordring Prikken vil bli til en firkant p\u00e5 skjermen til Micro Biten etter at det har g\u00e5tt fra 0 til 5 sekunder. Hva m\u00e5 du skifte i koden din hvis du vil at firkanten skal vises n\u00e5r det har g\u00e5tt fra 2 til 8 sekunder? Steg 3: Lage reglene for n\u00e5r en spiller vinner eller taper N\u00e5 m\u00e5 vi lage noen regler for reaksjonsspillet. Reglene forteller spillet hvem som vinner eller taper. For \u00e5 f\u00e5 til dette m\u00e5 bruke to regler: Hvis en spiller trykker p\u00e5 sin knapp etter at firkanten vises p\u00e5 skjermen s\u00e5 vinner spilleren som trykket knappen. Hvis en spiller trykker p\u00e5 sin knapp f\u00f8r firkanten vises p\u00e5 skjermen s\u00e5 vinner s\u00e5 taper spilleren som trykket knappen. F\u00f8rst skal vi programmere den f\u00f8rste regelen. Dette er regelen som forteller reaksjonspillet at en spiller har trykket p\u00e5 sin knapp etter at firkanten er dukket opp p\u00e5 skjermen. Finn klossen hvis sann fra kategorien Logikk . Dra klossen over hvis knapp A trykkes -klossen og slipp den n\u00e5r vis bilde -klossen er i munnen p\u00e5 hvis sann -klossen. input.onButtonPressed(Button.A, function () { if (true) { basic.showLeds(` . . # . . . # . . . # # # # # . # . . . . . # . . `) } }) Trekk klossen 0 0 fra kategorien Logikk og plasser den p\u00e5 verdifetet til hvis sann -klossen. input.onButtonPressed(Button.A, function () { if (0 0) { basic.showLeds(` . . # . . . # . . . # # # # # . # . . . . . # . . `) } }) Finn variabelen sluttid fra Variabel -kategorien og plasser klossen p\u00e5 det venstre verdifeltet p\u00e5 0 0 -klossen. Finn klossen kj\u00f8retid (ms) fra Inndata -kategorien plasserer klossen p\u00e5 det h\u00f8yre verdifeltet p\u00e5 sluttid 0 -klossen. input.onButtonPressed(Button.A, function () { let sluttid = 0 if (sluttid input.runningTime()) { basic.showLeds(` . . # . . . # . . . # # # # # . # . . . . . # . . `) } }) N\u00e5 har vi programmert den f\u00f8rste regelen til reaksjonsspillet. Heldigvis er det enklere \u00e5 fortelle spillet om den andre regelen. Trykk p\u00e5 + -knappen nederst p\u00e5 hvis sluttid kj\u00f8retid (ms) -klossen. Klossen vil da bli til en hvis sluttid kj\u00f8retid (ms) ellers -kloss. input.onButtonPressed(Button.A, function () { let sluttid = 0 if (sluttid input.runningTime()) { basic.showLeds(` . . # . . . # . . . # # # # # . # . . . . . # . . `) } else { } }) Finn en vis bilde -kloss og plasser i munnen p\u00e5 ellers p\u00e5 hvis sluttid kj\u00f8retid (ms) ellers -klossen. Tegn en pil p\u00e5 vis bilde -kloss som peker motsatt vei vis bilde -klossen over den. input.onButtonPressed(Button.A, function () { let sluttid = 0 if (sluttid input.runningTime()) { basic.showLeds(` . . # . . . # . . . # # # # # . # . . . . . # . . `) } else { basic.showLeds(` . . # . . . . . # . # # # # # . . . # . . . # . . `) } }) Da har vi fortalt spillet om den andre regelen. Til slutt i dette steget skal vi fortelle spillet at det skal starte p\u00e5 nytt etter at en knapp er trykket. For \u00e5 starte programmet p\u00e5 nytt skal vi bruke klossen tilbakestill . Ta klossen pause (ms) 100 og plasser den under hvis sluttid kj\u00f8retid (ms) ellers -klossen. Skift tallet i verdifeltet til 2000. Finn klossen tilbakestill i kategorien Styring . Kategorien Kontroll finner du ved \u00e5 f\u00f8rst trykke p\u00e5 Avansert i kategoriskuffen. Da vil skuffen vise mange flere kategorier. Ta tak i tilbakestill -klossen og plasser den under pause (ms) 2000 -klossen. input.onButtonPressed(Button.A, function () { if (sluttid input.runningTime()) { basic.showLeds(` . . # . . . # . . . # # # # # . # . . . . . # . . `) } else { basic.showLeds(` . . # . . . . . # . # # # # # . . . # . . . # . . `) } basic.pause(2000) control.reset() }) Gjenta hele steget du akkurat har gjort for hvis knapp B trykkes -klossen. N\u00e5r du er ferdig skal hvis knapp B trykkes se ut som bildet under. Legg merke til at pilene peker motsatt vei sammenlignet med hvis knapp B trykkes . input.onButtonPressed(Button.B, function () { if (sluttid input.runningTime()) { basic.showLeds(` . . # . . . . . # . # # # # # . . . # . . . # . . `) } else { basic.showLeds(` . . # . . . # . . . # # # # # . # . . . . . # . . `) } basic.pause(2000) control.reset() }) Test programmet Pr\u00f8v \u00e5 trykke p\u00e5 en av knappene p\u00e5 Micro Biten etter at firkanten dukker opp p\u00e5 skjermen. Da skal pilen som vises p\u00e5 skjermen peke mot knappen som ble tyrkt. Etter at pilen er blitt vist i to sekunder skal reaksjonsspillet starte p\u00e5 nytt. Pr\u00f8v ogs\u00e5 \u00e5 trykke p\u00e5 en av knappene f\u00f8r prikken blir til en firkant. Pilen skal n\u00e5 peke mot den andre knappen. Det virker ikke! Peker ikke pilene riktig n\u00e5r du trykker p\u00e5 knappene? Eller starter ikke reaksjonsspillet p\u00e5 nytt n\u00e5r du trykker en knapp? Da er noe galt i koden din. For \u00e5 finne feilen b\u00f8r du lese dette steget om igjen og se n\u00f8ye p\u00e5 bildene. Steg 4: Sjekke om en spiller har trykket sin knapp N\u00e5 er reaksjonsspillet nesten ferdig, men det er et par ting som gjenst\u00e5r. Vi m\u00e5 legge til en tilstand i spillet. En tilstand forteller spillet om noe har skjedd eller ikke. Tilstanden vi skal sjekke er om en av spillerne har trykket p\u00e5 sin knapp. Finn en hvis sann -kloss fra Logikk -kategorien. Plasser klossen i munnen til hvis knapp A trykt -klossen og i tillegg rundt hvis sluttid kj\u00f8retid (ms) ellers -klossen. Dra en ikke -kloss fra Logikk -kategorien og plasser de p\u00e5 verdifeltet til hvis sann -klossen. Lag en ny variabel som heter knapp_er_trykt . Drar knapp_er_trykt -klossen fra Variabel -kategorien og plasserer den p\u00e5 verdifeltet til ikke -klossen. input.onButtonPressed(Button.A, function () { let er_knapp_trykt = 0 if (!(er_knapp_trykt)) { if (sluttid input.runningTime()) { basic.showLeds(` . . # . . . # . . . # # # # # . # . . . . . # . . `) } else { basic.showLeds(` . . # . . . . . # . # # # # # . . . # . . . # . . `) } basic.pause(2000) control.reset() } }) Finn sett knapp_er_trykt til -klossen fra Variabel -kategorien. Plasser klossen ovenfor hvis sluttid kj\u00f8retid (ms) ellers -klossen. Ta klossen sann fra kategorien Logikk og plasser den p\u00e5 verdifeltet til sett knapp_er_trykt til -klossen. input.onButtonPressed(Button.A, function () { if (!(er_knapp_trykt)) { er_knapp_trykt = true if (sluttid input.runningTime()) { basic.showLeds(` . . # . . . # . . . # # # # # . # . . . . . # . . `) } else { basic.showLeds(` . . # . . . . . # . # # # # # . . . # . . . # . . `) } basic.pause(2000) control.reset() } }) De siste klossen du skal plassere er en hvis sann -kloss Denne klosse skal sjekke om en knapp er blitt trykt. Den gj\u00f8r at firkanten kun dukker opp p\u00e5 skjermen hvis ingen knaper er blitt trykt p\u00e5 av spillerne. Finn klossen hvis sann fra kategorien Logikk . Plasser klossen rundt vis bilde -klossen er plassert i kunnen til ved start -klossen. P\u00e5 verdifeltet til hvis sann -klossen plasserer du f\u00f8rst en ikke -kloss og s\u00e5 variabelen knapp_er_trykt . let sluttid = 0 let starttid = input.runningTime() let ventetid = Math.randomRange(0, 5000) sluttid = starttid + ventetid basic.showLeds(` . . . . . . . . . . . . # . . . . . . . . . . . . `) basic.pause(ventetid) if (!(knapp_er_trykt)) { basic.showLeds(` . . . . . . # # # . . # . # . . # # # . . . . . . `) } Da er du ferdig! Hele koden til reaksjonsspillet skal se ut som p\u00e5 bildet under. input.onButtonPressed(Button.A, function () { if (!(knapp_er_trykt)) { knapp_er_trykt = true if (sluttid input.runningTime()) { basic.showLeds(` . . # . . . # . . . # # # # # . # . . . . . # . . `) } else { basic.showLeds(` . . # . . . . . # . # # # # # . . . # . . . # . . `) } basic.pause(2000) control.reset() } }) input.onButtonPressed(Button.B, function () { if (!(knapp_er_trykt)) { knapp_er_trykt = true if (sluttid input.runningTime()) { basic.showLeds(` . . # . . . . . # . # # # # # . . . # . . . # . . `) } else { basic.showLeds(` . . # . . . # . . . # # # # # . # . . . . . # . . `) } basic.pause(2000) control.reset() } }) let knapp_er_trykt = false let sluttid = 0 let starttid = input.runningTime() let ventetid = Math.randomRange(0, 5000) sluttid = starttid + ventetid basic.showLeds(` . . . . . . . . . . . . # . . . . . . . . . . . . `) basic.pause(ventetid) if (!(knapp_er_trykt)) { basic.showLeds(` . . . . . . # # # . . # . # . . # # # . . . . . . `) } Test programmet Pr\u00f8v \u00e5 trykke p\u00e5 en knapp p\u00e5 Micro Biten f\u00f8r firkanten vises p\u00e5 skjermen. Pilen skal da peke mot den knappen som ikke ble trykt. N\u00e5r spillet har startet p\u00e5 nytt pr\u00f8ver du \u00e5 trykke p\u00e5 en knapp etter at firkanten dukker opp p\u00e5 skjermen. Pilen skal da peke mot den knappen du trykte. Pr\u00f8v s\u00e5 \u00e5 trykke p\u00e5 en knapp og rett etterp\u00e5 den andre knappen. Pilene skal ikke skifte retning n\u00e5r du gj\u00f8r dette. Det virker ikke! Vises firkanten p\u00e5 skjermen etter etter at du har trykt p\u00e5 en knapp? Eller skifter pilen retning n\u00e5r du trykker p\u00e5 begge knappene raskt etter hverandre? Da er noe galt i koden din. For \u00e5 finne feilen b\u00f8r du lese dette steget om igjen og se n\u00f8ye p\u00e5 bildene. Avslutning Gratulerer, du har n\u00e5 laget et reaksjonspill! Hvis du testet programmet ditt p\u00e5 slutten av forrige steg og ikke fant noen feil s\u00e5 skal du n\u00e5 overf\u00f8re programmet til Micro Biten. Koble Micro Biten til datamaskinen din med en USB-kabel. Trykk p\u00e5 tannhjulet \u00f8verst til h\u00f8yre p\u00e5 siden og velg Koble sammen . N\u00e5 vises en dialogboks p\u00e5 siden. Trykk p\u00e5 knappen Koble sammen . Velg BBC micro:bit CMSIS-DAP eller DAPLink CMSIS-DAP fra listen som vises og trykk p\u00e5 knappen Sammenkoble . Trykk til slutt p\u00e5 knappen Last ned nederst til venstre p\u00e5 siden for \u00e5 overf\u00f8re programmet til Micro Biten. Da er det p\u00e5 tide \u00e5 spille spillet! Hvem er raskest av deg og en venn? Det finnes mange forskjellige programmeringssider og -apper for Micro Bit. Bruk den siden eller appen som du har l\u00e6rt i undervisningen.","title":"Reaksjonsspill"},{"location":"prosjekter/microbit/reaksjonsspill/#lag-et-reaksjonsspill-med-micro-bit","text":"","title":"Lag et reaksjonsspill med Micro Bit"},{"location":"prosjekter/microbit/reaksjonsspill/#introduksjon","text":"Dette er en oppskrift som passer for deg som har programmert litt p\u00e5 Micro Bit fra f\u00f8r. Oppskriften tar omtrent en time \u00e5 gjennomf\u00f8re. Du skal i denne oppskriften lage et reaksjonsspill for to spillere. Du vil l\u00e6re \u00e5 vise piler p\u00e5 skjermen til Micro Biten n\u00e5r en knapp trykkes \u00e5 lage en n\u00f8yaktig nedtelling \u00e5 programmere spilleregler \u00e5 bruke en variabel til \u00e5 huske om noe har skjedd Du trenger en Micro Bit en USB-kabel til overf\u00f8ring en batteripakke med to AAA-batterier","title":"Introduksjon"},{"location":"prosjekter/microbit/reaksjonsspill/#steg-1-vis-en-pil-pa-skjermen-til-micro-biten-nar-en-knapp-trykkes","text":"I dette steget skal vi fortelle Micro Biten at den skal vise en pil p\u00e5 skjermen n\u00e5r en knapp trykkes. Pilen skal peke mot knappen som ble trykt. Begynn med \u00e5 \u00e5pne nettsiden MakeCode for micro:bit . Trykk p\u00e5 knappen Nytt Prosjekt for \u00e5 starte et nytt prosjekt. Gi prosjektet navnet Reaksjonsspill for to spillere ved \u00e5 skrive i tekstfeltet nederst p\u00e5 siden. Slett alle klossene som ligger i l\u00e6rretet. Du sletter en kloss ved \u00e5 dra den til venstre over kategoriene. Slipp klossen n\u00e5r s\u00f8plespannet vises for \u00e5 slette den. Da er vi klar til \u00e5 begynne \u00e5 kode! F\u00f8rst skal vi lage pilen som peker mot A-knappen n\u00e5r den trykkes. Dra klossen n\u00e5r knapp A trykkes fra kategorien Inndata og slipp den et sted p\u00e5 l\u00e6rretet. Finn klossen vis bilde i kategorien Basis . Ta tak i klossen og plasser den i munnen til n\u00e5r A trykkes . Tegn en pil p\u00e5 vis bilde -klossen ved \u00e5 trykke p\u00e5 de sm\u00e5 firkantene. Pass p\u00e5 at pilen peker til venstre! input.onButtonPressed(Button.A, function () { basic.showLeds(` . . # . . . # . . . # # # # # . # . . . . . # . . `) }) Da skal vi lage pilen som peker mot B-knappen n\u00e5r den trykkes. Dra klossen n\u00e5r knapp A trykkes fra kategorien Inndata og slipp den et sted p\u00e5 l\u00e6rretet. Trykk p\u00e5 A p\u00e5 n\u00e5r knapp A trykkes og velg B fra rullegardinmenyen. Finn klossen vis bilde og plasser den i munnen til n\u00e5r B trykkes . Tegn en pil som peker mot h\u00f8yre p\u00e5 vis bilde -klossen ved \u00e5 trykke p\u00e5 de sm\u00e5 firkantene. input.onButtonPressed(Button.A, function () { basic.showLeds(` . . # . . . # . . . # # # # # . # . . . . . # . . `) }) input.onButtonPressed(Button.B, function () { basic.showLeds(` . . # . . . . . # . # # # # # . . . # . . . # . . `) }) Test programmet Til venstre er det bilde av en Micro Bit. Denne kan du bruke til \u00e5 teste programmet ditt mens du koder. Trykk p\u00e5 A -knappen, da skal det vises en pil p\u00e5 skjermen som peker mot venstre. Etterp\u00e5 pr\u00f8ver du \u00e5 trykke p\u00e5 B -knappen. Da skal det vises en pil mot h\u00f8yre. Det virker ikke! Peker ikke pilene mot knappene n\u00e5r du trykker p\u00e5 dem? Da er noe galt i koden din. For \u00e5 finne feilen b\u00f8r du lese oppskriften om igjen og se n\u00f8ye p\u00e5 bildene.","title":"Steg 1: Vis en pil p\u00e5 skjermen til Micro Biten n\u00e5r en knapp trykkes"},{"location":"prosjekter/microbit/reaksjonsspill/#steg-2-lag-en-tilfeldig-nedtelling","text":"Vi vil at en prikk skal vises p\u00e5 skjermen til Micro Biten n\u00e5r reaksjonspillet begynner. P\u00e5 et tilfeldig tidspunkt mellom null til fem sekunder skal denne prikken bli til en firkant. For \u00e5 f\u00e5 til dette m\u00e5 vi lage en tilfeldig nedtelling. For \u00e5 lage en tilfeldig nedtelling m\u00e5 reaksjonsspillet huske tre tidspunkter: N\u00e5r nedtellingen starter Hvor lenge nedtellingen varer N\u00e5r nedtellingen slutter Disse tre tidspunktene skal reaksjonsspillet huske med \u00e5 bruke tre variabler. Vi begynner med \u00e5 lage variablene vi trenger. Legg merke til at klossene fra forrige steg vil fortsatt v\u00e6re i l\u00e6rretet ditt p\u00e5 MakeCode. De skal ikke slettes selv om kun klossene for dette steget vises under. Ta klossen ved start fra kategorien Basis og plasser den p\u00e5 l\u00e6rretet. Trykk p\u00e5 kategorien Variabler og deretter p\u00e5 knappen Lag en variabel . I tekstfeltet som vises p\u00e5 skjermen skriver du starttid . Plasser klossen sett starttid til 0 i munnen til ved start . let starttid = 0 Lag to variabler til i Variabel -kategorien ved \u00e5 trykke p\u00e5 Lag en variabel . Den ene variabelen skal hete ventetid og den andre skal hete sluttid . Plasser sett ventetid til 0 og sett sluttid til 0 i munnen til n\u00e5r starter . Klossene sett \u2026 til 0 og endre \u2026 med 0 i kategorien Variabler viser alltid navnet til den siste variabelen du laget. For \u00e5 skifte navnet p\u00e5 en variabel-kloss m\u00e5 du dra klossen ut i l\u00e6rretet og deretter trykke p\u00e5 firkanten som er rundt navnet p\u00e5 klossen. I rullegradinmenyen som da vises vil du kunne velge riktig variabel. let starttid = 0 let ventetid = 0 let sluttid = 0 Finn klossen kj\u00f8retid (ms) og plasser den p\u00e5 verdifeltet til sett starttid til 0 . For \u00e5 finne denne klossen m\u00e5 du f\u00f8rst trykke p\u00e5 kategorien Inndata . N\u00e5r du har trykket p\u00e5 kategorien vil det dukke opp en kategori under Inndata som heter \u22ef more . Trykk p\u00e5 den nye kategorien for \u00e5 finne kj\u00f8retid (ms) . let starttid = input.runningTime() let ventetid = 0 let sluttid = 0 Finn klossen velg tilfeldig 0 til 10 fra kategorien Matematikk . Plasser den i verdifeltet til sett ventetid til 0 . Skift tallet 10 til 5000 p\u00e5 velg tilfeldig 0 til 10 -klossen. Klossen velg tilfeldig 0 til 5000 vil n\u00e5 velge en tilfeldig ventetid mellom 0 og 5000 millisekunder. Et millisekund er et tusenedelssekund. Det betyr at 5000 millisekunder er det samme som 5 sekunder. }) let starttid = input.runningTime() let ventetid = Math.randomRange(0, 5000) let sluttid = 0 N\u00e5 skal vi regne ut sluttiden for nedtellingen. Den regner vi ut ved \u00e5 summere starttid og ventetid variablene. Ta klossen 0 + 0 fra Matematikk -kategorien og plasser den p\u00e5 verdifetet til sett sluttid til 0 . Plasser variabelene starttid og ventetid p\u00e5 verdifeltene til klossen 0 = 0 . let starttid = input.runningTime() let ventetid = Math.randomRange(0, 5000) let sluttid = starttid + ventetid Til slutt skal vi lage en prikken som skifter til en firkant p\u00e5 skjermen n\u00e5r ventetiden er l\u00f8pt ut. Begynn med \u00e5 plassere to vis bilde -klosser i munnen til n\u00e5r starter klossen . Pass p\u00e5 at begge klossene plasseres under variablene. Tegn en prikk p\u00e5 den \u00f8verste vis bilde -klossen og en firkant p\u00e5 den nederste vis bilde -klossen. Plasser deretter klossen pause (ms) 0 fra Basis -kategorien mellom de to vis bilde -klossene. Plasser variabelen ventetid p\u00e5 verdifeltet til pause (ms) 0 -klossen. let starttid = input.runningTime() let ventetid = Math.randomRange(0, 5000) let sluttid = starttid + ventetid basic.showLeds(` . . . . . . . . . . . . # . . . . . . . . . . . . `) basic.pause(ventetid) basic.showLeds(` . . . . . . # # # . . # . # . . # # # . . . . . . `) Test programmet Micro Biten til venstre p\u00e5 MakeCode skal n\u00e5 vise en prikk som blir til en firkant p\u00e5 et tilfeldig tidspunkt. Trykk p\u00e5 \ud83d\udd03 under Micro Biten for \u00e5 kj\u00f8re koden igjen. Tiden det tar f\u00f8r prikken blir en forkant skal v\u00e6re ulik hver gang du trykker p\u00e5 \ud83d\udd03 . Det virker ikke! Hvis ikke prikken blir til en firkant p\u00e5 Micro Biten s\u00e5 er noe galt i koden din. For \u00e5 finne feilen b\u00f8r du se n\u00f8ye p\u00e5 bildene i oppskriften og sammenligne dem med din kode. En vanlig feil er \u00e5 plassere gale klosser p\u00e5 verdifeltene til sett \u2026 til -klossene Utfordring Prikken vil bli til en firkant p\u00e5 skjermen til Micro Biten etter at det har g\u00e5tt fra 0 til 5 sekunder. Hva m\u00e5 du skifte i koden din hvis du vil at firkanten skal vises n\u00e5r det har g\u00e5tt fra 2 til 8 sekunder?","title":"Steg 2: Lag en tilfeldig nedtelling"},{"location":"prosjekter/microbit/reaksjonsspill/#steg-3-lage-reglene-for-nar-en-spiller-vinner-eller-taper","text":"N\u00e5 m\u00e5 vi lage noen regler for reaksjonsspillet. Reglene forteller spillet hvem som vinner eller taper. For \u00e5 f\u00e5 til dette m\u00e5 bruke to regler: Hvis en spiller trykker p\u00e5 sin knapp etter at firkanten vises p\u00e5 skjermen s\u00e5 vinner spilleren som trykket knappen. Hvis en spiller trykker p\u00e5 sin knapp f\u00f8r firkanten vises p\u00e5 skjermen s\u00e5 vinner s\u00e5 taper spilleren som trykket knappen. F\u00f8rst skal vi programmere den f\u00f8rste regelen. Dette er regelen som forteller reaksjonspillet at en spiller har trykket p\u00e5 sin knapp etter at firkanten er dukket opp p\u00e5 skjermen. Finn klossen hvis sann fra kategorien Logikk . Dra klossen over hvis knapp A trykkes -klossen og slipp den n\u00e5r vis bilde -klossen er i munnen p\u00e5 hvis sann -klossen. input.onButtonPressed(Button.A, function () { if (true) { basic.showLeds(` . . # . . . # . . . # # # # # . # . . . . . # . . `) } }) Trekk klossen 0 0 fra kategorien Logikk og plasser den p\u00e5 verdifetet til hvis sann -klossen. input.onButtonPressed(Button.A, function () { if (0 0) { basic.showLeds(` . . # . . . # . . . # # # # # . # . . . . . # . . `) } }) Finn variabelen sluttid fra Variabel -kategorien og plasser klossen p\u00e5 det venstre verdifeltet p\u00e5 0 0 -klossen. Finn klossen kj\u00f8retid (ms) fra Inndata -kategorien plasserer klossen p\u00e5 det h\u00f8yre verdifeltet p\u00e5 sluttid 0 -klossen. input.onButtonPressed(Button.A, function () { let sluttid = 0 if (sluttid input.runningTime()) { basic.showLeds(` . . # . . . # . . . # # # # # . # . . . . . # . . `) } }) N\u00e5 har vi programmert den f\u00f8rste regelen til reaksjonsspillet. Heldigvis er det enklere \u00e5 fortelle spillet om den andre regelen. Trykk p\u00e5 + -knappen nederst p\u00e5 hvis sluttid kj\u00f8retid (ms) -klossen. Klossen vil da bli til en hvis sluttid kj\u00f8retid (ms) ellers -kloss. input.onButtonPressed(Button.A, function () { let sluttid = 0 if (sluttid input.runningTime()) { basic.showLeds(` . . # . . . # . . . # # # # # . # . . . . . # . . `) } else { } }) Finn en vis bilde -kloss og plasser i munnen p\u00e5 ellers p\u00e5 hvis sluttid kj\u00f8retid (ms) ellers -klossen. Tegn en pil p\u00e5 vis bilde -kloss som peker motsatt vei vis bilde -klossen over den. input.onButtonPressed(Button.A, function () { let sluttid = 0 if (sluttid input.runningTime()) { basic.showLeds(` . . # . . . # . . . # # # # # . # . . . . . # . . `) } else { basic.showLeds(` . . # . . . . . # . # # # # # . . . # . . . # . . `) } }) Da har vi fortalt spillet om den andre regelen. Til slutt i dette steget skal vi fortelle spillet at det skal starte p\u00e5 nytt etter at en knapp er trykket. For \u00e5 starte programmet p\u00e5 nytt skal vi bruke klossen tilbakestill . Ta klossen pause (ms) 100 og plasser den under hvis sluttid kj\u00f8retid (ms) ellers -klossen. Skift tallet i verdifeltet til 2000. Finn klossen tilbakestill i kategorien Styring . Kategorien Kontroll finner du ved \u00e5 f\u00f8rst trykke p\u00e5 Avansert i kategoriskuffen. Da vil skuffen vise mange flere kategorier. Ta tak i tilbakestill -klossen og plasser den under pause (ms) 2000 -klossen. input.onButtonPressed(Button.A, function () { if (sluttid input.runningTime()) { basic.showLeds(` . . # . . . # . . . # # # # # . # . . . . . # . . `) } else { basic.showLeds(` . . # . . . . . # . # # # # # . . . # . . . # . . `) } basic.pause(2000) control.reset() }) Gjenta hele steget du akkurat har gjort for hvis knapp B trykkes -klossen. N\u00e5r du er ferdig skal hvis knapp B trykkes se ut som bildet under. Legg merke til at pilene peker motsatt vei sammenlignet med hvis knapp B trykkes . input.onButtonPressed(Button.B, function () { if (sluttid input.runningTime()) { basic.showLeds(` . . # . . . . . # . # # # # # . . . # . . . # . . `) } else { basic.showLeds(` . . # . . . # . . . # # # # # . # . . . . . # . . `) } basic.pause(2000) control.reset() }) Test programmet Pr\u00f8v \u00e5 trykke p\u00e5 en av knappene p\u00e5 Micro Biten etter at firkanten dukker opp p\u00e5 skjermen. Da skal pilen som vises p\u00e5 skjermen peke mot knappen som ble tyrkt. Etter at pilen er blitt vist i to sekunder skal reaksjonsspillet starte p\u00e5 nytt. Pr\u00f8v ogs\u00e5 \u00e5 trykke p\u00e5 en av knappene f\u00f8r prikken blir til en firkant. Pilen skal n\u00e5 peke mot den andre knappen. Det virker ikke! Peker ikke pilene riktig n\u00e5r du trykker p\u00e5 knappene? Eller starter ikke reaksjonsspillet p\u00e5 nytt n\u00e5r du trykker en knapp? Da er noe galt i koden din. For \u00e5 finne feilen b\u00f8r du lese dette steget om igjen og se n\u00f8ye p\u00e5 bildene.","title":"Steg 3: Lage reglene for n\u00e5r en spiller vinner eller taper"},{"location":"prosjekter/microbit/reaksjonsspill/#steg-4-sjekke-om-en-spiller-har-trykket-sin-knapp","text":"N\u00e5 er reaksjonsspillet nesten ferdig, men det er et par ting som gjenst\u00e5r. Vi m\u00e5 legge til en tilstand i spillet. En tilstand forteller spillet om noe har skjedd eller ikke. Tilstanden vi skal sjekke er om en av spillerne har trykket p\u00e5 sin knapp. Finn en hvis sann -kloss fra Logikk -kategorien. Plasser klossen i munnen til hvis knapp A trykt -klossen og i tillegg rundt hvis sluttid kj\u00f8retid (ms) ellers -klossen. Dra en ikke -kloss fra Logikk -kategorien og plasser de p\u00e5 verdifeltet til hvis sann -klossen. Lag en ny variabel som heter knapp_er_trykt . Drar knapp_er_trykt -klossen fra Variabel -kategorien og plasserer den p\u00e5 verdifeltet til ikke -klossen. input.onButtonPressed(Button.A, function () { let er_knapp_trykt = 0 if (!(er_knapp_trykt)) { if (sluttid input.runningTime()) { basic.showLeds(` . . # . . . # . . . # # # # # . # . . . . . # . . `) } else { basic.showLeds(` . . # . . . . . # . # # # # # . . . # . . . # . . `) } basic.pause(2000) control.reset() } }) Finn sett knapp_er_trykt til -klossen fra Variabel -kategorien. Plasser klossen ovenfor hvis sluttid kj\u00f8retid (ms) ellers -klossen. Ta klossen sann fra kategorien Logikk og plasser den p\u00e5 verdifeltet til sett knapp_er_trykt til -klossen. input.onButtonPressed(Button.A, function () { if (!(er_knapp_trykt)) { er_knapp_trykt = true if (sluttid input.runningTime()) { basic.showLeds(` . . # . . . # . . . # # # # # . # . . . . . # . . `) } else { basic.showLeds(` . . # . . . . . # . # # # # # . . . # . . . # . . `) } basic.pause(2000) control.reset() } }) De siste klossen du skal plassere er en hvis sann -kloss Denne klosse skal sjekke om en knapp er blitt trykt. Den gj\u00f8r at firkanten kun dukker opp p\u00e5 skjermen hvis ingen knaper er blitt trykt p\u00e5 av spillerne. Finn klossen hvis sann fra kategorien Logikk . Plasser klossen rundt vis bilde -klossen er plassert i kunnen til ved start -klossen. P\u00e5 verdifeltet til hvis sann -klossen plasserer du f\u00f8rst en ikke -kloss og s\u00e5 variabelen knapp_er_trykt . let sluttid = 0 let starttid = input.runningTime() let ventetid = Math.randomRange(0, 5000) sluttid = starttid + ventetid basic.showLeds(` . . . . . . . . . . . . # . . . . . . . . . . . . `) basic.pause(ventetid) if (!(knapp_er_trykt)) { basic.showLeds(` . . . . . . # # # . . # . # . . # # # . . . . . . `) } Da er du ferdig! Hele koden til reaksjonsspillet skal se ut som p\u00e5 bildet under. input.onButtonPressed(Button.A, function () { if (!(knapp_er_trykt)) { knapp_er_trykt = true if (sluttid input.runningTime()) { basic.showLeds(` . . # . . . # . . . # # # # # . # . . . . . # . . `) } else { basic.showLeds(` . . # . . . . . # . # # # # # . . . # . . . # . . `) } basic.pause(2000) control.reset() } }) input.onButtonPressed(Button.B, function () { if (!(knapp_er_trykt)) { knapp_er_trykt = true if (sluttid input.runningTime()) { basic.showLeds(` . . # . . . . . # . # # # # # . . . # . . . # . . `) } else { basic.showLeds(` . . # . . . # . . . # # # # # . # . . . . . # . . `) } basic.pause(2000) control.reset() } }) let knapp_er_trykt = false let sluttid = 0 let starttid = input.runningTime() let ventetid = Math.randomRange(0, 5000) sluttid = starttid + ventetid basic.showLeds(` . . . . . . . . . . . . # . . . . . . . . . . . . `) basic.pause(ventetid) if (!(knapp_er_trykt)) { basic.showLeds(` . . . . . . # # # . . # . # . . # # # . . . . . . `) } Test programmet Pr\u00f8v \u00e5 trykke p\u00e5 en knapp p\u00e5 Micro Biten f\u00f8r firkanten vises p\u00e5 skjermen. Pilen skal da peke mot den knappen som ikke ble trykt. N\u00e5r spillet har startet p\u00e5 nytt pr\u00f8ver du \u00e5 trykke p\u00e5 en knapp etter at firkanten dukker opp p\u00e5 skjermen. Pilen skal da peke mot den knappen du trykte. Pr\u00f8v s\u00e5 \u00e5 trykke p\u00e5 en knapp og rett etterp\u00e5 den andre knappen. Pilene skal ikke skifte retning n\u00e5r du gj\u00f8r dette. Det virker ikke! Vises firkanten p\u00e5 skjermen etter etter at du har trykt p\u00e5 en knapp? Eller skifter pilen retning n\u00e5r du trykker p\u00e5 begge knappene raskt etter hverandre? Da er noe galt i koden din. For \u00e5 finne feilen b\u00f8r du lese dette steget om igjen og se n\u00f8ye p\u00e5 bildene.","title":"Steg 4: Sjekke om en spiller har trykket sin knapp"},{"location":"prosjekter/microbit/reaksjonsspill/#avslutning","text":"Gratulerer, du har n\u00e5 laget et reaksjonspill! Hvis du testet programmet ditt p\u00e5 slutten av forrige steg og ikke fant noen feil s\u00e5 skal du n\u00e5 overf\u00f8re programmet til Micro Biten. Koble Micro Biten til datamaskinen din med en USB-kabel. Trykk p\u00e5 tannhjulet \u00f8verst til h\u00f8yre p\u00e5 siden og velg Koble sammen . N\u00e5 vises en dialogboks p\u00e5 siden. Trykk p\u00e5 knappen Koble sammen . Velg BBC micro:bit CMSIS-DAP eller DAPLink CMSIS-DAP fra listen som vises og trykk p\u00e5 knappen Sammenkoble . Trykk til slutt p\u00e5 knappen Last ned nederst til venstre p\u00e5 siden for \u00e5 overf\u00f8re programmet til Micro Biten. Da er det p\u00e5 tide \u00e5 spille spillet! Hvem er raskest av deg og en venn? Det finnes mange forskjellige programmeringssider og -apper for Micro Bit. Bruk den siden eller appen som du har l\u00e6rt i undervisningen.","title":"Avslutning"},{"location":"prosjekter/microbit/terning/","text":"Lag en terning med Micro Bit Introduksjon Dette er en oppskrift som passer deg som er nybegynner i Micro Bit. Den tar omtrent en halvtime \u00e5 gjennomf\u00f8re. I denne oppskriften vil du programmere Micro Biten til \u00e5 bli en terning som du kan bruke til \u00e5 spille brettspillet Snakes and Ladders . Du vil l\u00e6re \u00e5 f\u00e5 Micro Biten til \u00e5 gj\u00f8re noe n\u00e5r den ristes \u00e5 lage animasjoner p\u00e5 skjermen til Micro Biten \u00e5 bruke en variabel til \u00e5 huske et tall Du trenger en Micro Bit en USB-kabel til overf\u00f8ring en batteripakke med to AAA-batterier en utskrift av brettspillet Snakes and Ladders Steg 1: Gj\u00f8r noe n\u00e5r Micro Biten ristes Micro Biten har en sensor som gj\u00f8r at den kan merke n\u00e5r den ristes. Den skal vi bruke til \u00e5 lage v\u00e5r egen Micro Bit-terning. I dette steget skal du f\u00e5 Micro Biten til \u00e5 reagere p\u00e5 at den ristes og da vise et terningkast. Begynn med \u00e5 \u00e5pne nettsiden MakeCode for micro:bit . Trykk p\u00e5 knappen Nytt Prosjekt for \u00e5 starte et nytt prosjekt. Gi prosjektet navnet Lag en terning ved \u00e5 skrive i tekstfeltet nederst p\u00e5 siden. Slett alle klossene som ligger i l\u00e6rretet. Du sletter en kloss ved \u00e5 dra den til venstre over kategoriene. Slipp klossen n\u00e5r s\u00f8plespannet vises for \u00e5 slette den. Micro Biten kan reagere p\u00e5 forskjellige typer inndata . Inndata er noe som skjer med Micro Biten og som du \u00f8nsker den skal reagere p\u00e5. Noen eksempler p\u00e5 inndata er \u00e5 trykke p\u00e5 en knapp p\u00e5 Micro Biten eller \u00e5 vende den opp-ned. I dette programmet \u00f8nsker vi at Micro Biten skal reagere p\u00e5 at den ristes. Dra klossen n\u00e5r ristes fra kategorien Inndata og slipp den et sted p\u00e5 l\u00e6rretet. input.onGesture(Gesture.Shake, function () { }) Som du ser ovenfor er det en munn p\u00e5 n\u00e5r ristes -klossen. Hvis du plasserer en kloss i munnen p\u00e5 n\u00e5r ristes vil denne klossen utf\u00f8res n\u00e5r Micro Biten ristes. Alle klosser som blir plassert i munnen til en kloss fra Inndata -kategorien vil utf\u00f8res om Micro Biten f\u00e5r denne typen inndata. Du skal n\u00e5 fortelle Micro Biten at den skal vise tallet 0 n\u00e5r den ristes. Trykk p\u00e5 kategorien Basis og finn vis tall 0 -klossen. Ta tak i klossen og plasser den i munnen til n\u00e5r ristes . input.onGesture(Gesture.Shake, function () { basic.showNumber(0) }) Test programmet Til venstre p\u00e5 siden er det et bilde av en Micro Bit. Denne kan du bruke til \u00e5 teste programmet ditt mens du koder. Trykk p\u00e5 den hvite sirkelen ved siden av SHAKE . Da tror Micro Biten at du rister den, og den vil vise tallet null. Steg 2: Vis et tilfeldig tall fra 1 til 6 Du har n\u00e5 programmert at Micro Biten skal vise tallet null n\u00e5r den ristes. Men n\u00e5r du kaster en ekte terning vil den lande p\u00e5 og vise et tilfeldig tall fra en til seks. For \u00e5 f\u00e5 til dette m\u00e5 vi fortelle Micro Biten at den skal vise et tilfeldig tall fra en til seks n\u00e5r den ristes. Finn klossen velg tilfeldig 0 til 10 i kategorien Matematikk . Ta tak i klossen og slipp den p\u00e5 verdifeltet 0 p\u00e5 vis tall -klossen. Trykk p\u00e5 verdifeltet 0 p\u00e5 velg tilfeldig 0 til 10 og skriv inn tallet 1 . Trykk deretter p\u00e5 verdifeltet 10 p\u00e5 velg tilfeldig 1 til 10 og skiv inn tallet 6 . input.onGesture(Gesture.Shake, function () { basic.showNumber(Math.randomRange(1, 6)) }) Test programmet Trykk SHAKE p\u00e5 Micro Biten. Den skal n\u00e5 vise ett tilfeldig tall fra en til seks hver gang du trykker p\u00e5 SHAKE . Det virker ikke! Hvis Micro Biten ikke viser et tilfeldig tall fra en til seks hver gang du trykker SHAKE s\u00e5 er noe galt i programmet ditt. For \u00e5 finne feilen b\u00f8r du lese oppskriften om igjen og se n\u00f8ye p\u00e5 bildene. En vanlig feil er \u00e5 glemme \u00e5 skifte tallene i verdifeltet p\u00e5 velg tilfeldig fra 0 til 10 til 1 og 6 . Utfordring Vanlige terninger har \u00f8yne fra en til seks. Men noen terninger har \u00f8yne fra en til tjue. Disse kalles for D20-terninger. Hva m\u00e5 du forandre i koden du har laget for \u00e5 f\u00e5 Micro Biten til \u00e5 fungere som en D20-terning? Steg 3: Lage en terninganimasjon Terningen din fungerer n\u00e5, men den er litt kjedelig. Den viser kun ett tall for hver gang du rister Micro Biten. Det ville v\u00e6rt mye kulere om terningen viste mange tilfeldige tall fra en til seks f\u00f8r den til slutt landet p\u00e5 et tall. For \u00e5 f\u00e5 til dette m\u00e5 du lage en animasjon. Finn klossen gjenta 4 ganger fra kategorien L\u00f8kker . Dra den over til vis tall i programmet ditt. N\u00e5r vis tall er i munnen til gjenta 4 ganger slipper du klossen for \u00e5 plassere den. input.onGesture(Gesture.Shake, function () { for (let i = 0; i 4; i++) { basic.showNumber(Math.randomRange(1, 6)) } }) Klossene som plasserer i munnen til gjenta 4 ganger vil utf\u00f8res fire ganger etter hverandre. Antall ganger klossene i munnen utf\u00f8res av gjenta bestemmes av tallet som st\u00e5r i verdifeltet til gjenta -klossen. Vi vil at Micro Biten skal utf\u00f8re vis tall fem ganger etter hverandre. For \u00e5 f\u00e5 til dette m\u00e5 vi skifte tallet i verdifeltet til fem. Trykk p\u00e5 tallet 4 i verdifeltet p\u00e5 gjenta 4 ganger og skriv inn tallet 5 . input.onGesture(Gesture.Shake, function () { for (let i = 0; i 5; i++) { basic.showNumber(Math.randomRange(1, 6)) } }) Hvis du n\u00e5 tester programmet ditt vil se du at tallene skifter litt for fort. For \u00e5 f\u00e5 hvert tall til \u00e5 vises lengre p\u00e5 skjermen m\u00e5 vi legge til en pause mellom hver gang et tall vises. Finn klossen pause (ms) 100 fra kategorien Basis og plasser den under vis tall . Pass p\u00e5 at pause -klossen plasseres i munnen til gjenta 5 ganger . input.onGesture(Gesture.Shake, function () { for (let i = 0; i 5; i++) { basic.showNumber(Math.randomRange(1, 6)) basic.pause(100) } }) Test programmet Trykk p\u00e5 SHAKE for \u00e5 teste programmet ditt. Micro Biten skal n\u00e5 vise fem tilfeldige tall p\u00e5 skjermen hver gang du trykker SHAKE . Utfordring Hva m\u00e5 du forandre i koden din for \u00e5 f\u00e5 Micro Biten til \u00e5 kun vise tre tilfeldige tall hver gang du trykker p\u00e5 SHAKE ? Steg 4: Lag en blinkeanimasjon Terningen fungerer n\u00e5, men det kan v\u00e6re vanskelig \u00e5 se hva tall terningen lander p\u00e5 til slutt. Det kan vi gj\u00f8re tydeligere ved \u00e5 lage en ny animasjon som f\u00e5r tallet terningen lander p\u00e5 til \u00e5 blinke. Finn klossen gjenta 4 ganger i kategorien L\u00f8kker . Plasser den under gjenta 5 ganger . Skift tallet i verdifeltet til 3 . input.onGesture(Gesture.Shake, function () { for (let i = 0; i 5; i++) { basic.showNumber(Math.randomRange(1, 6)) basic.pause(100) } for (let i = 0; i 3; i++) { } }) For \u00e5 f\u00e5 tallet terningen lander p\u00e5 til \u00e5 blinke trenger du noen flere klosser. Finn klossen t\u00f8m skjerm . Du finner den ved \u00e5 f\u00f8rst trykke p\u00e5 kategorien Basis og deretter p\u00e5 \u22ef more som dukker opp under. Ta tak i t\u00f8m skjerm -klossen og plasser den i munnen til gjenta 3 ganger . input.onGesture(Gesture.Shake, function () { for (let i = 0; i 5; i++) { basic.showNumber(Math.randomRange(1, 6)) basic.pause(100) } for (let i = 0; i 3; i++) { basic.clearScreen() } }) Klossen t\u00f8m skjerm skrur av alle lysene p\u00e5 skjermen til Micro Biten. Det er en kloss som er fin \u00e5 bruke hvis du vil vise noe p\u00e5 skjermen og s\u00e5 ta det vekk etterp\u00e5. N\u00e5 skal vi finne tre klosser p\u00e5 en gang, men heldigvis kommer alle fra samme kategori. Finn klossen pause (ms) 100 fra Basis og plasser den under t\u00f8m skjerm . Ta en vis tall 0 og plasser den under pause (ms) 100 Ta enda en pause (ms) 100 og plasser den under vis tall 0 . input.onGesture(Gesture.Shake, function () { for (let i = 0; i 5; i++) { basic.showNumber(Math.randomRange(1, 6)) basic.pause(100) } for (let i = 0; i 3; i++) { basic.clearScreen() basic.pause(100) basic.showNumber(0) basic.pause(100) } }) Test programmet Trykk p\u00e5 SHAKE for \u00e5 teste programmet ditt. Se n\u00f8ye etter om det skjer noe merkelig! Steg 4: Husk et terningkast med en variabel Hvis du testet programmet ditt p\u00e5 slutten av forrige steg s\u00e5 vil du ha sett en feil i programmet. Det var kun tallet 0 som blinket, og ikke terningkastet. Det skal vi fikse n\u00e5! Heldigvis finnes det en m\u00e5te \u00e5 f\u00e5 Micro Biten til \u00e5 huske det siste tallet i terninganimasjonen. Vi m\u00e5 bruke en variabel. Variabler brukes i nesten alle programmer. En variabel kan v\u00e6re et tall eller en setning. Det kan v\u00e6re mange grunner til at programmer m\u00e5 huske noe til senere. En grunn til at et program for eksempel m\u00e5 huske et tall er fordi tallet skal brukes senere i et regnestykke. Trykk p\u00e5 kategorien Variabler Trykk s\u00e5 p\u00e5 knappen Lag en ny variabel . Du vil f\u00e5 et sp\u00f8rsm\u00e5l om hva du vil kalle variabelen; kall den for terningkast og trykk p\u00e5 Ok . Etter at du har laget variabelen terningkast vil det komme noen nye klosser i kategorien Variabel . Finn klossen sett terningkast til 0 og plasser den over den \u00f8verste vis tall -klossen. let terningkast = 0 input.onGesture(Gesture.Shake, function () { for (let i = 0; i 5; i++) { terningkast = 0 basic.showNumber(Math.randomRange(1, 6)) basic.pause(100) } for (let i = 0; i 3; i++) { basic.clearScreen() basic.pause(100) basic.showNumber(0) basic.pause(100) } }) Dra klossen velg tilfeldig 1 til 6 vekk fra verdifeltet til vis tall og slipp den ned p\u00e5 verdifeltet til sett terningkast til 0 . let terningkast = 0 input.onGesture(Gesture.Shake, function () { for (let i = 0; i 5; i++) { terningkast = Math.randomRange(1, 6) basic.showNumber(0) basic.pause(100) } for (let i = 0; i 3; i++) { basic.clearScreen() basic.pause(100) basic.showNumber(0) basic.pause(100) } }) Hent to terningkast fra kategorien Variabler og plasser dem p\u00e5 verdifeltene til begge vis tall 0 -klossene. let terningkast = 0 input.onGesture(Gesture.Shake, function () { for (let i = 0; i 5; i++) { terningkast = Math.randomRange(1, 6) basic.showNumber(terningkast) basic.pause(100) } for (let i = 0; i 3; i++) { basic.clearScreen() basic.pause(100) basic.showNumber(terningkast) basic.pause(100) } }) Du har n\u00e5 brukt en variabel til \u00e5 huske det siste terningkastet. Det som skjer i programmet er at hver gang terninganimasjonen viser et tilfeldig tall s\u00e5 husker variabelen terningkast dette tallet. N\u00e5r terninganimasjonen er ferdig og programmet g\u00e5r videre til blinkeanimasjonen s\u00e5 er det det siste tallet som ble vist i terninganimasjonen som huskes av variablen terningkast . Det er dette tallet som s\u00e5 blinker i blinkeanimasjonen! Test programmet Trykk p\u00e5 SHAKE for \u00e5 teste programmet ditt. Skjermen p\u00e5 Micro Biten skal f\u00f8rst vise fem tilfeldige tall. Det siste av de fem tilfeldige tallene skal s\u00e5 blinke tre ganger p\u00e5 skjermen. Det virker ikke! Hvis Micro Biten ikke viser fem tilfeldige tall og s\u00e5 blinker det siste tilfeldige tallet n\u00e5r du trykker p\u00e5 SHAKE s\u00e5 er noe galt i programmet ditt. For \u00e5 finne feilen b\u00f8r du se p\u00e5 det siste bildet av koden ovenfor og sammeligne det med din kode. Avslutning Gratulerer, du har n\u00e5 gjort Micro Biten om til en terning! Hvis du testet programmet ditt p\u00e5 slutten av forrige steg og ikke fant noen feil s\u00e5 skal du n\u00e5 overf\u00f8re programmet til Micro Biten. Koble Micro Biten til datamaskinen din med en USB-kabel. Trykk p\u00e5 tannhjulet \u00f8verst til h\u00f8yre p\u00e5 siden og velg Koble sammen . N\u00e5 vises en dialogboks p\u00e5 siden. Trykk p\u00e5 knappen Koble sammen . Velg BBC micro:bit CMSIS-DAP eller DAPLink CMSIS-DAP fra listen som vises og trykk p\u00e5 knappen Sammenkoble . Trykk til slutt p\u00e5 knappen Last ned nederst til venstre p\u00e5 siden for \u00e5 overf\u00f8re programmet til Micro Biten. Da er det p\u00e5 tide \u00e5 teste terningen din med \u00e5 spille brettspillet Snakes and Ladders . Koble batteripakken til Micro Biten slik at du kan ta den med deg. G\u00e5 sammen med en venn og se hvem som klarer \u00e5 vinne!","title":"Terning"},{"location":"prosjekter/microbit/terning/#lag-en-terning-med-micro-bit","text":"","title":"Lag en terning med Micro Bit"},{"location":"prosjekter/microbit/terning/#introduksjon","text":"Dette er en oppskrift som passer deg som er nybegynner i Micro Bit. Den tar omtrent en halvtime \u00e5 gjennomf\u00f8re. I denne oppskriften vil du programmere Micro Biten til \u00e5 bli en terning som du kan bruke til \u00e5 spille brettspillet Snakes and Ladders . Du vil l\u00e6re \u00e5 f\u00e5 Micro Biten til \u00e5 gj\u00f8re noe n\u00e5r den ristes \u00e5 lage animasjoner p\u00e5 skjermen til Micro Biten \u00e5 bruke en variabel til \u00e5 huske et tall Du trenger en Micro Bit en USB-kabel til overf\u00f8ring en batteripakke med to AAA-batterier en utskrift av brettspillet Snakes and Ladders","title":"Introduksjon"},{"location":"prosjekter/microbit/terning/#steg-1-gjr-noe-nar-micro-biten-ristes","text":"Micro Biten har en sensor som gj\u00f8r at den kan merke n\u00e5r den ristes. Den skal vi bruke til \u00e5 lage v\u00e5r egen Micro Bit-terning. I dette steget skal du f\u00e5 Micro Biten til \u00e5 reagere p\u00e5 at den ristes og da vise et terningkast. Begynn med \u00e5 \u00e5pne nettsiden MakeCode for micro:bit . Trykk p\u00e5 knappen Nytt Prosjekt for \u00e5 starte et nytt prosjekt. Gi prosjektet navnet Lag en terning ved \u00e5 skrive i tekstfeltet nederst p\u00e5 siden. Slett alle klossene som ligger i l\u00e6rretet. Du sletter en kloss ved \u00e5 dra den til venstre over kategoriene. Slipp klossen n\u00e5r s\u00f8plespannet vises for \u00e5 slette den. Micro Biten kan reagere p\u00e5 forskjellige typer inndata . Inndata er noe som skjer med Micro Biten og som du \u00f8nsker den skal reagere p\u00e5. Noen eksempler p\u00e5 inndata er \u00e5 trykke p\u00e5 en knapp p\u00e5 Micro Biten eller \u00e5 vende den opp-ned. I dette programmet \u00f8nsker vi at Micro Biten skal reagere p\u00e5 at den ristes. Dra klossen n\u00e5r ristes fra kategorien Inndata og slipp den et sted p\u00e5 l\u00e6rretet. input.onGesture(Gesture.Shake, function () { }) Som du ser ovenfor er det en munn p\u00e5 n\u00e5r ristes -klossen. Hvis du plasserer en kloss i munnen p\u00e5 n\u00e5r ristes vil denne klossen utf\u00f8res n\u00e5r Micro Biten ristes. Alle klosser som blir plassert i munnen til en kloss fra Inndata -kategorien vil utf\u00f8res om Micro Biten f\u00e5r denne typen inndata. Du skal n\u00e5 fortelle Micro Biten at den skal vise tallet 0 n\u00e5r den ristes. Trykk p\u00e5 kategorien Basis og finn vis tall 0 -klossen. Ta tak i klossen og plasser den i munnen til n\u00e5r ristes . input.onGesture(Gesture.Shake, function () { basic.showNumber(0) }) Test programmet Til venstre p\u00e5 siden er det et bilde av en Micro Bit. Denne kan du bruke til \u00e5 teste programmet ditt mens du koder. Trykk p\u00e5 den hvite sirkelen ved siden av SHAKE . Da tror Micro Biten at du rister den, og den vil vise tallet null.","title":"Steg 1: Gj\u00f8r noe n\u00e5r Micro Biten ristes"},{"location":"prosjekter/microbit/terning/#steg-2-vis-et-tilfeldig-tall-fra-1-til-6","text":"Du har n\u00e5 programmert at Micro Biten skal vise tallet null n\u00e5r den ristes. Men n\u00e5r du kaster en ekte terning vil den lande p\u00e5 og vise et tilfeldig tall fra en til seks. For \u00e5 f\u00e5 til dette m\u00e5 vi fortelle Micro Biten at den skal vise et tilfeldig tall fra en til seks n\u00e5r den ristes. Finn klossen velg tilfeldig 0 til 10 i kategorien Matematikk . Ta tak i klossen og slipp den p\u00e5 verdifeltet 0 p\u00e5 vis tall -klossen. Trykk p\u00e5 verdifeltet 0 p\u00e5 velg tilfeldig 0 til 10 og skriv inn tallet 1 . Trykk deretter p\u00e5 verdifeltet 10 p\u00e5 velg tilfeldig 1 til 10 og skiv inn tallet 6 . input.onGesture(Gesture.Shake, function () { basic.showNumber(Math.randomRange(1, 6)) }) Test programmet Trykk SHAKE p\u00e5 Micro Biten. Den skal n\u00e5 vise ett tilfeldig tall fra en til seks hver gang du trykker p\u00e5 SHAKE . Det virker ikke! Hvis Micro Biten ikke viser et tilfeldig tall fra en til seks hver gang du trykker SHAKE s\u00e5 er noe galt i programmet ditt. For \u00e5 finne feilen b\u00f8r du lese oppskriften om igjen og se n\u00f8ye p\u00e5 bildene. En vanlig feil er \u00e5 glemme \u00e5 skifte tallene i verdifeltet p\u00e5 velg tilfeldig fra 0 til 10 til 1 og 6 . Utfordring Vanlige terninger har \u00f8yne fra en til seks. Men noen terninger har \u00f8yne fra en til tjue. Disse kalles for D20-terninger. Hva m\u00e5 du forandre i koden du har laget for \u00e5 f\u00e5 Micro Biten til \u00e5 fungere som en D20-terning?","title":"Steg 2: Vis et tilfeldig tall fra 1 til 6"},{"location":"prosjekter/microbit/terning/#steg-3-lage-en-terninganimasjon","text":"Terningen din fungerer n\u00e5, men den er litt kjedelig. Den viser kun ett tall for hver gang du rister Micro Biten. Det ville v\u00e6rt mye kulere om terningen viste mange tilfeldige tall fra en til seks f\u00f8r den til slutt landet p\u00e5 et tall. For \u00e5 f\u00e5 til dette m\u00e5 du lage en animasjon. Finn klossen gjenta 4 ganger fra kategorien L\u00f8kker . Dra den over til vis tall i programmet ditt. N\u00e5r vis tall er i munnen til gjenta 4 ganger slipper du klossen for \u00e5 plassere den. input.onGesture(Gesture.Shake, function () { for (let i = 0; i 4; i++) { basic.showNumber(Math.randomRange(1, 6)) } }) Klossene som plasserer i munnen til gjenta 4 ganger vil utf\u00f8res fire ganger etter hverandre. Antall ganger klossene i munnen utf\u00f8res av gjenta bestemmes av tallet som st\u00e5r i verdifeltet til gjenta -klossen. Vi vil at Micro Biten skal utf\u00f8re vis tall fem ganger etter hverandre. For \u00e5 f\u00e5 til dette m\u00e5 vi skifte tallet i verdifeltet til fem. Trykk p\u00e5 tallet 4 i verdifeltet p\u00e5 gjenta 4 ganger og skriv inn tallet 5 . input.onGesture(Gesture.Shake, function () { for (let i = 0; i 5; i++) { basic.showNumber(Math.randomRange(1, 6)) } }) Hvis du n\u00e5 tester programmet ditt vil se du at tallene skifter litt for fort. For \u00e5 f\u00e5 hvert tall til \u00e5 vises lengre p\u00e5 skjermen m\u00e5 vi legge til en pause mellom hver gang et tall vises. Finn klossen pause (ms) 100 fra kategorien Basis og plasser den under vis tall . Pass p\u00e5 at pause -klossen plasseres i munnen til gjenta 5 ganger . input.onGesture(Gesture.Shake, function () { for (let i = 0; i 5; i++) { basic.showNumber(Math.randomRange(1, 6)) basic.pause(100) } }) Test programmet Trykk p\u00e5 SHAKE for \u00e5 teste programmet ditt. Micro Biten skal n\u00e5 vise fem tilfeldige tall p\u00e5 skjermen hver gang du trykker SHAKE . Utfordring Hva m\u00e5 du forandre i koden din for \u00e5 f\u00e5 Micro Biten til \u00e5 kun vise tre tilfeldige tall hver gang du trykker p\u00e5 SHAKE ?","title":"Steg 3: Lage en terninganimasjon"},{"location":"prosjekter/microbit/terning/#steg-4-lag-en-blinkeanimasjon","text":"Terningen fungerer n\u00e5, men det kan v\u00e6re vanskelig \u00e5 se hva tall terningen lander p\u00e5 til slutt. Det kan vi gj\u00f8re tydeligere ved \u00e5 lage en ny animasjon som f\u00e5r tallet terningen lander p\u00e5 til \u00e5 blinke. Finn klossen gjenta 4 ganger i kategorien L\u00f8kker . Plasser den under gjenta 5 ganger . Skift tallet i verdifeltet til 3 . input.onGesture(Gesture.Shake, function () { for (let i = 0; i 5; i++) { basic.showNumber(Math.randomRange(1, 6)) basic.pause(100) } for (let i = 0; i 3; i++) { } }) For \u00e5 f\u00e5 tallet terningen lander p\u00e5 til \u00e5 blinke trenger du noen flere klosser. Finn klossen t\u00f8m skjerm . Du finner den ved \u00e5 f\u00f8rst trykke p\u00e5 kategorien Basis og deretter p\u00e5 \u22ef more som dukker opp under. Ta tak i t\u00f8m skjerm -klossen og plasser den i munnen til gjenta 3 ganger . input.onGesture(Gesture.Shake, function () { for (let i = 0; i 5; i++) { basic.showNumber(Math.randomRange(1, 6)) basic.pause(100) } for (let i = 0; i 3; i++) { basic.clearScreen() } }) Klossen t\u00f8m skjerm skrur av alle lysene p\u00e5 skjermen til Micro Biten. Det er en kloss som er fin \u00e5 bruke hvis du vil vise noe p\u00e5 skjermen og s\u00e5 ta det vekk etterp\u00e5. N\u00e5 skal vi finne tre klosser p\u00e5 en gang, men heldigvis kommer alle fra samme kategori. Finn klossen pause (ms) 100 fra Basis og plasser den under t\u00f8m skjerm . Ta en vis tall 0 og plasser den under pause (ms) 100 Ta enda en pause (ms) 100 og plasser den under vis tall 0 . input.onGesture(Gesture.Shake, function () { for (let i = 0; i 5; i++) { basic.showNumber(Math.randomRange(1, 6)) basic.pause(100) } for (let i = 0; i 3; i++) { basic.clearScreen() basic.pause(100) basic.showNumber(0) basic.pause(100) } }) Test programmet Trykk p\u00e5 SHAKE for \u00e5 teste programmet ditt. Se n\u00f8ye etter om det skjer noe merkelig!","title":"Steg 4: Lag en blinkeanimasjon"},{"location":"prosjekter/microbit/terning/#steg-4-husk-et-terningkast-med-en-variabel","text":"Hvis du testet programmet ditt p\u00e5 slutten av forrige steg s\u00e5 vil du ha sett en feil i programmet. Det var kun tallet 0 som blinket, og ikke terningkastet. Det skal vi fikse n\u00e5! Heldigvis finnes det en m\u00e5te \u00e5 f\u00e5 Micro Biten til \u00e5 huske det siste tallet i terninganimasjonen. Vi m\u00e5 bruke en variabel. Variabler brukes i nesten alle programmer. En variabel kan v\u00e6re et tall eller en setning. Det kan v\u00e6re mange grunner til at programmer m\u00e5 huske noe til senere. En grunn til at et program for eksempel m\u00e5 huske et tall er fordi tallet skal brukes senere i et regnestykke. Trykk p\u00e5 kategorien Variabler Trykk s\u00e5 p\u00e5 knappen Lag en ny variabel . Du vil f\u00e5 et sp\u00f8rsm\u00e5l om hva du vil kalle variabelen; kall den for terningkast og trykk p\u00e5 Ok . Etter at du har laget variabelen terningkast vil det komme noen nye klosser i kategorien Variabel . Finn klossen sett terningkast til 0 og plasser den over den \u00f8verste vis tall -klossen. let terningkast = 0 input.onGesture(Gesture.Shake, function () { for (let i = 0; i 5; i++) { terningkast = 0 basic.showNumber(Math.randomRange(1, 6)) basic.pause(100) } for (let i = 0; i 3; i++) { basic.clearScreen() basic.pause(100) basic.showNumber(0) basic.pause(100) } }) Dra klossen velg tilfeldig 1 til 6 vekk fra verdifeltet til vis tall og slipp den ned p\u00e5 verdifeltet til sett terningkast til 0 . let terningkast = 0 input.onGesture(Gesture.Shake, function () { for (let i = 0; i 5; i++) { terningkast = Math.randomRange(1, 6) basic.showNumber(0) basic.pause(100) } for (let i = 0; i 3; i++) { basic.clearScreen() basic.pause(100) basic.showNumber(0) basic.pause(100) } }) Hent to terningkast fra kategorien Variabler og plasser dem p\u00e5 verdifeltene til begge vis tall 0 -klossene. let terningkast = 0 input.onGesture(Gesture.Shake, function () { for (let i = 0; i 5; i++) { terningkast = Math.randomRange(1, 6) basic.showNumber(terningkast) basic.pause(100) } for (let i = 0; i 3; i++) { basic.clearScreen() basic.pause(100) basic.showNumber(terningkast) basic.pause(100) } }) Du har n\u00e5 brukt en variabel til \u00e5 huske det siste terningkastet. Det som skjer i programmet er at hver gang terninganimasjonen viser et tilfeldig tall s\u00e5 husker variabelen terningkast dette tallet. N\u00e5r terninganimasjonen er ferdig og programmet g\u00e5r videre til blinkeanimasjonen s\u00e5 er det det siste tallet som ble vist i terninganimasjonen som huskes av variablen terningkast . Det er dette tallet som s\u00e5 blinker i blinkeanimasjonen! Test programmet Trykk p\u00e5 SHAKE for \u00e5 teste programmet ditt. Skjermen p\u00e5 Micro Biten skal f\u00f8rst vise fem tilfeldige tall. Det siste av de fem tilfeldige tallene skal s\u00e5 blinke tre ganger p\u00e5 skjermen. Det virker ikke! Hvis Micro Biten ikke viser fem tilfeldige tall og s\u00e5 blinker det siste tilfeldige tallet n\u00e5r du trykker p\u00e5 SHAKE s\u00e5 er noe galt i programmet ditt. For \u00e5 finne feilen b\u00f8r du se p\u00e5 det siste bildet av koden ovenfor og sammeligne det med din kode.","title":"Steg 4: Husk et terningkast med en variabel"},{"location":"prosjekter/microbit/terning/#avslutning","text":"Gratulerer, du har n\u00e5 gjort Micro Biten om til en terning! Hvis du testet programmet ditt p\u00e5 slutten av forrige steg og ikke fant noen feil s\u00e5 skal du n\u00e5 overf\u00f8re programmet til Micro Biten. Koble Micro Biten til datamaskinen din med en USB-kabel. Trykk p\u00e5 tannhjulet \u00f8verst til h\u00f8yre p\u00e5 siden og velg Koble sammen . N\u00e5 vises en dialogboks p\u00e5 siden. Trykk p\u00e5 knappen Koble sammen . Velg BBC micro:bit CMSIS-DAP eller DAPLink CMSIS-DAP fra listen som vises og trykk p\u00e5 knappen Sammenkoble . Trykk til slutt p\u00e5 knappen Last ned nederst til venstre p\u00e5 siden for \u00e5 overf\u00f8re programmet til Micro Biten. Da er det p\u00e5 tide \u00e5 teste terningen din med \u00e5 spille brettspillet Snakes and Ladders . Koble batteripakken til Micro Biten slik at du kan ta den med deg. G\u00e5 sammen med en venn og se hvem som klarer \u00e5 vinne!","title":"Avslutning"}]}