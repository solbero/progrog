{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u00d8nsker har du lyst til \u00e5 skape og \u00e5 l\u00e6re om spennende teknologi, men vet du ikke hvor du skal begynne? P\u00e5 ProgRog vil du finne kjekke oppskifter som viser deg hvordan du kan skape noe kult med teknologi. Oppleggene er skrevet med for deg fra fjerde til tiende klasse. Det er meningen at du kan f\u00f8lge oppskriftene p\u00e5 egenh\u00e5nd, men av og til kan det v\u00e6re lurt \u00e5 sp\u00f8r en voksen. Alle oppskiftene begynner med en video. Den b\u00f8r du se f\u00f8r du begynner. Hva du trenger av utstyr og hva du kommer til \u00e5 l\u00e6re st\u00e5r ogs\u00e5 i begynnelsen. Og husk, viktig informasjon finner du i de fargende boksene i hver oppskrift.","title":"Velkommen"},{"location":"kontakt/","text":"","title":"Kontakt"},{"location":"om/","text":"Mitt navn er Njord og jeg er l\u00e6rer. Men p\u00e5 fritiden er jeg en \u00abmaker\u00bb \u2014 det betyr at jeg elsker \u00e5 lage ting og \u00e5 l\u00e6re om teknologi. ProgRog er plassen min p\u00e5 nettet der jeg deler noen av tingene jeg lager og noe av det jeg l\u00e6rer. Mitt m\u00e5l er \u00e5 inspirere deg til \u00e5 v\u00e6re mer nysgjerrige og finne gleden i \u00e5 skape med teknologi.","title":"Om ProgRog"},{"location":"prosjekter/microbit/reaksjonsspill/","text":"Reaksjonsspill for to spillere med Micro Bit Introduksjon Dette er en oppskrift som passer for deg som har programmert litt p\u00e5 Micro Bit fra f\u00f8r. Oppskriften tar en time \u00e5 gjennomf\u00f8re. Du skal i denne oppskriften skal du lage et reaksjonsspill. Du vil i reaksjonsspillet spille en-mot-en og den som tykker f\u00f8rst p\u00e5 sin knapp n\u00e5r en firkant vises p\u00e5 skjermen vinner! Du vil l\u00e6re \u00e5 vise bilder p\u00e5 skjermen til Micro Biten \u00e5 f\u00e5 Micro Biten til \u00e5 gj\u00f8re noe n\u00e5r en knapp trykkes \u00e5 bruke en variabel til \u00e5 lage en nedtelling \u00e5 kode regler for et spill Du trenger en Micro Bit en USB-kabel til overf\u00f8ring en batteripakke med to AAA-batterier Steg 1: Vis en firkant p\u00e5 skjermen n\u00e5r du trykker p\u00e5 to knapper Begynn med \u00e5 g\u00e5 til MakeCode for micro:bit . 1 Start et nytt prosjekt ved \u00e5 trykke p\u00e5 knappen Nytt Prosjekt . Da vil nettsiden der du programmerer Micro Biten \u00e5pnes. Gi prosjektet navnet Reaksjonsspill ved \u00e5 skrive i tekstfeltet nederst p\u00e5 nettsiden. N\u00e5 skal vi kode! Det f\u00f8rste vi vil er \u00e5 vise en firkant p\u00e5 skjermen til Micro Biten n\u00e5r du trykker A og B-knappene samtidig. Begynn med \u00e5 dra en gjenta for alltid -kloss fra kategorien Basis og slipp den p\u00e5 l\u00e6rretet til h\u00f8yre p\u00e5 nettsiden. basic.forever(function () { }) Finn en hvis sann -kloss fra kategorien L\u00f8kker . Slipp hvis sann -klossen inni munnen til gjenta for alltid -klossen. basic.forever(function () { if (true) { } }) Etterp\u00e5 tar du en knapp A trykkes -kloss fra kategorien Inndata og plasserer den p\u00e5 verdifeltet til hvis sann -klossen. basic.forever(function () { if (input.buttonIsPressed(Button.A)) { } }) Vi vil at Micro Biten skal gj\u00f8re noe n\u00e5r knappene A og B trykkes samtidig. For \u00e5 f\u00e5 til dette m\u00e5 vi skifte A i knapp A trykkes -klossen til A+B . Trykk p\u00e5 bokstaven A p\u00e5 knapp A trykkes -klossen. Du vil da f\u00e5 opp en rullegardinmeny. Trykk p\u00e5 A+B i rullegardinmenyen for \u00e5 velge den. basic.forever(function () { if (input.buttonIsPressed(Button.AB)) { } }) N\u00e5r knappene A og B trykkes samtidig skal Micro Biten vise en liten firkant p\u00e5 skjermen. f\u00f8rst finner du vis ikon -klossen i kategorien Basis og plasser den i \u00abmunnen\u00bb til hvis -klossen. basic.forever(function () { if (input.buttonIsPressed(Button.AB)) { basic.showIcon(IconNames.Heart) } }) Trykk p\u00e5 bildet av hjertet p\u00e5 vis ikon -klossen. Du vil da f\u00e5 opp en rullegardinmeny som inneholder mange forskjellige ikoner. Trykk p\u00e5 bildet av en liten firkant helt nederst i rullegardinmenyen. basic.forever(function () { if (input.buttonIsPressed(Button.AB)) { basic.showIcon(IconNames.SmallSquare) } }) Micro Biten skal vise den lille firkanten p\u00e5 skjermen p\u00e5 et tilfeldig tidspunkt n\u00e5r A og B knappene trykkes samtidig. For \u00e5 f\u00e5 til dette m\u00e5 du f\u00f8rst finne klossen pause i kategorien Basis . Plasser den over vis ikon -klossen. basic.forever(function () { if (input.buttonIsPressed(Button.AB)) { basic.pause(100) basic.showIcon(IconNames.SmallSquare) } }) Finn s\u00e5 velg tilfeldig -klossen i kategorien Matematikk og plasser den i verdifeltet til pause -klossen. Skift s\u00e5 verdien 10 i velg tilfeldig -klossen til 3000 . basic.forever(function () { if (input.buttonIsPressed(Button.AB)) { basic.pause(Math.randomRange(0, 3000)) basic.showIcon(IconNames.SmallSquare) } }) Hva er et millisekund (ms)? Du la kanskje merke til at det st\u00e5r (ms) p\u00e5 pause -klossen? Datamaskiner arbeider veldig raskt og derfor, n\u00e5r vi skal fortelle den om hvor lenge den skal ta en pause, m\u00e5 vi bruke millisekund. Et millisekund er et tusenedelssekund. Det betyr at 3000 millisekunder er det samme som 3 sekunder. Til slutt s\u00e5 m\u00e5 vi fortelle Micro Biten at skjermen skal t\u00f8mmes hver gang vi trykker A og B knappene samtidig. \u00c5 t\u00f8mme skjermen betyr \u00e5 fjerne alt som vises p\u00e5 den. Hvis vi ikke forteller Micro Biten at skjermen skal t\u00f8mmes s\u00e5 vil den lille firkanten vises hele tiden. Finn t\u00f8m skjerm -klossen. For \u00e5 finne denne klossen m\u00e5 du f\u00f8rst trykke p\u00e5 kategorien Basis . N\u00e5r du har trykket p\u00e5 den vil det komme en ny kategori under Basis som heter \u22ef more . Trykk p\u00e5 den nye kategorien for \u00e5 finne t\u00f8m skjerm -klossen. Plasser t\u00f8m skjerm -klossen over velg tilfeldig -klossen. basic.forever(function () { if (input.buttonIsPressed(Button.AB)) { basic.clearScreen() basic.pause(Math.randomRange(0, 3000)) basic.showIcon(IconNames.SmallSquare) } }) Test programmet Til venstre er det bilde av en Micro Bit. Denne kan du bruke til \u00e5 teste programmet ditt mens du koder. Trykk p\u00e5 den hvite sirkelen ved siden av A+B . Da tror Micro Biten at du trykker p\u00e5 A og B knappene samtidig og en liten firkant vil vises p\u00e5 skjermen. Firkanten vil dukke opp p\u00e5 forskjellige tidspunkt mellom 0 og 3 sekunder. Det virker ikke! Viser ikke den lille firkanten n\u00e5r du trykker p\u00e5 A+B knappen p\u00e5 Micro Biten? For \u00e5 finne feilen b\u00f8r du lese oppskriften om igjen og se n\u00f8ye p\u00e5 bildene om du har glemt noe. En vanlig feil er \u00e5 glemme \u00e5 skifte A til A+B p\u00e5 n\u00e5r trykkes -klossen. Utfordring Micro Biten viser n\u00e5 den lille firkanten p\u00e5 et tilfeldig tidspunkt mellom 0 og 3 sekunder. Hvis du vil at Micro Biten skal vise den lille firkanten p\u00e5 et tilfeldig tidspunkt mellom 0 og 5 sekunder, hva tall skal da st\u00e5 i stedet for 3000 i velg tilfeldig -klossen? Steg 2: Legge til to spillere Micro Biten viser n\u00e5 en firkant p\u00e5 et tilfeldig tidspunkt n\u00e5r du trukker p\u00e5 A og B knappen samtidig. N\u00e5 skal vi kode reglene til reaksjonspillet. Vi vil at den som trykker f\u00f8rst p\u00e5 sin knapp n\u00e5r firkanten vises p\u00e5 skjermen vinner spillet. Hent to n\u00e5r knapp A trykkes -klosser fra kategorien Inndata . Plasser disse klossene p\u00e5 l\u00e6rretet. Skift A p\u00e5 den ene n\u00e5r knapp A trykkes -klossen til B . input.onButtonPressed(Button.A, function () { }) input.onButtonPressed(Button.B, function () { }) Plasser en vis bilde -kloss i munnen p\u00e5 hver av de rosa n\u00e5r trykkes -klossene. input.onButtonPressed(Button.A, function () { basic.showLeds(` . . . . . . . . . . . . . . . . . . . . . . . . . `) }) input.onButtonPressed(Button.B, function () { basic.showLeds(` . . . . . . . . . . . . . . . . . . . . . . . . . `) }) Tegn piler p\u00e5 vis bilde -klossene ved \u00e5 trykke p\u00e5 de sm\u00e5 firkantene. input.onButtonPressed(Button.A, function () { basic.showLeds(` . . # . . . # . . . # # # # # . # . . . . . # . . `) }) input.onButtonPressed(Button.B, function () { basic.showLeds(` . . # . . . . . # . # # # # # . . . # . . . # . . `) }) Test programmet Test programmet ved \u00e5 trykke p\u00e5 A+B p\u00e5 Micro Biten til venstre p\u00e5 skjermen. Hva skjer om du tryker p\u00e5 A-knappen f\u00f8r firkanten kommer frem p\u00e5 skjermen p\u00e5 Micro Biten? Pr\u00f8v s\u00e5 \u00e5 trykke p\u00e5 A-knappen og etterp\u00e5 trykk p\u00e5 B-knappen. Steg 3: Bruke en variabel for \u00e5 huske en nedtelling N\u00e5r du testet programmet p\u00e5 slutten av forrige steg s\u00e5 la du kanskje merke til noe merkelig? Slik vi har kodet reaksjonspillet n\u00e5 s\u00e5 har det ikke noe \u00e5 si om firkanten har blitt vist p\u00e5 skjermen eller ikke. Pilen vil vise at du vant uansett. Dette m\u00e5 vi fikse. For \u00e5 l\u00f8se dette m\u00e5 vi lage en nedtelling som teller ned til n\u00e5r firkanten vises p\u00e5 skjermen. For \u00e5 huske hvor mye som er igjen av tiden til firkanten vises p\u00e5 skjermen m\u00e5 vi bruke en variabel. Trykk p\u00e5 kategorien Variabler og s\u00e5 p\u00e5 den gr\u00e5 knappen Lag en variabel . Variabelen gir du navnet nedtelling . Dra s\u00e5 en sett nedtelling til -kloss ut i l\u00e6rretet og plasser den over pause -klossen. basic.forever(function () { if (input.buttonIsPressed(Button.AB)) { basic.clearScreen() nedtelling = 0 basic.pause(Math.randomRange(0, 3000)) basic.showIcon(IconNames.SmallSquare) } }) Hva er en variabel? Variabler brukes i programmer for \u00e5 huske noe til senere. En variabel kan v\u00e6re et tall eller en setning. Det er v\u00e6re mange grunner til at programmer m\u00e5 huske noe. En grunn for at et program skal huske et tall som skal brukes i et regnestykke senere i programmet. Dra den lilla velg tilfeldig tall -klossen fra verdifeltet til pause -klossen og slipp den p\u00e5 verdifeltet til sett nedtelling til -klossen. basic.forever(function () { if (input.buttonIsPressed(Button.AB)) { basic.clearScreen() nedtelling = Math.randomRange(0, 3000) basic.pause(100) basic.showIcon(IconNames.SmallSquare) } }) Ta en hvis sann -kloss fra kategorien Logikk og plasser den under vis ikon -klossen, men pass p\u00e5 at hvis -klossen er inni munnen til den bl\u00e5 gjenta for alltid -klossen. basic.forever(function () { if (input.buttonIsPressed(Button.AB)) { basic.clearScreen() nedtelling = Math.randomRange(0, 3000) basic.pause(100) basic.showIcon(IconNames.SmallSquare) if (true) { } } }) Finn s\u00e5 en 0 = 0 -kloss fra kategorien Logikk og plasser den over sann i hvis sann -klossen. let nedtelling = 0 basic.forever(function () { if (input.buttonIsPressed(Button.AB)) { basic.clearScreen() nedtelling = Math.randomRange(0, 3000) basic.pause(100) basic.showIcon(IconNames.SmallSquare) if (0 == 0) { } } }) Trykk p\u00e5 = p\u00e5 0 = 0 -klossen for \u00e5 f\u00e5 frem rullegardinmenyen og skift tegnet til . let nedtelling = 0 basic.forever(function () { if (input.buttonIsPressed(Button.AB)) { basic.clearScreen() nedtelling = Math.randomRange(0, 3000) basic.pause(100) basic.showIcon(IconNames.SmallSquare) if (0 0) { } } }) Ta en nedtelling -kloss fra Variabler og plasser den p\u00e5 0 som er til venstre p\u00e5 0 = 0 -klossen. let nedtelling = 0 basic.forever(function () { if (input.buttonIsPressed(Button.AB)) { basic.clearScreen() nedtelling = Math.randomRange(0, 3000) basic.pause(100) basic.showIcon(IconNames.SmallSquare) if (nedtelling 0) { } } }) Flytt pause -klossen og plasser den i \u00abmunnen\u00bb til hvis nedtelling 0 -klossen. Skift verdien i verdifeltet p\u00e5 pause -klossen til 1 . Etterp\u00e5 flytter du vis ikon -klossen under hvis nedtelling 0 -klossen. Hvordan flytte kun en kloss Du kan flytte en kloss som henger fast andre klosser. For \u00e5 gj\u00f8re det m\u00e5 du holde nede ctrl -tasten p\u00e5 tastaturet n\u00e5r du flytter klossen. let nedtelling = 0 basic.forever(function () { if (input.buttonIsPressed(Button.AB)) { basic.clearScreen() nedtelling = Math.randomRange(0, 3000) if (nedtelling 0) { basic.pause(100) } basic.showIcon(IconNames.SmallSquare) } }) Til slutt henter du en endre nedtelling med -kloss fra variabler og plasserer den under pause -klossen. Pass p\u00e5 at b\u00e5de pause -klossen og endre nedtelling med -klossen er inni \u00abmunnen\u00bb til hvis nedtelling 0 -klossen. let nedtelling = 0 basic.forever(function () { if (input.buttonIsPressed(Button.AB)) { basic.clearScreen() nedtelling = Math.randomRange(0, 3000) if (nedtelling 0) { basic.pause(100) nedtelling += 1 } basic.showIcon(IconNames.SmallSquare) } }) Endre verdien i verdifeltet til pause -klossen til 1 og verditeltet til endre nedtelling med -klossen til -1. let nedtelling = 0 basic.forever(function () { if (input.buttonIsPressed(Button.AB)) { basic.clearScreen() nedtelling = Math.randomRange(0, 3000) if (nedtelling 0) { basic.pause(1) nedtelling += -1 } basic.showIcon(IconNames.SmallSquare) } }) Hvordan fungerer nedtellingen? Vi bruker variabelen nedtelling til \u00e5 huske et tilfeldig valgt tall mellom 0 og 3000. La oss si at tallet 10 var det tilfeldige tallet som ble valgt. I neste steg av koden g\u00e5r programmet inn i en gjenta -kloss. I begynnelsen av denne klossen skjekker gjenta -klossen om variabelen nedtelling er st\u00f8rre enn 0. Variabelen nedtelling er 10, derfor fortsetter programmet inn i \u00abmunnen\u00bb til gjenta -klossen. Her tar programmet en pause p\u00e5 1 millisekund. Etter pausen tar programmet og forandrer nedtelling med -1. Variabelen nedtelling er n\u00e5 tallet 9. I det siste steget g\u00e5r programmet tilbake til toppen av gjenta -klossen og skjekker om nedtelling er st\u00f8rre enn 0. Variabelen nedtelling er n\u00e5 9, s\u00e5 den gjentar koden inni \u00abmunnen\u00bb p\u00e5 gjenta -klossen p\u00e5 ny. Dette fortsetter helt til variabelen nedtelling er 0. Da vil programmet g\u00e5 videre i koden og vise firkanten p\u00e5 skjermen som er plassert under gjenta -klossen. Fordi variabelen nedtelling begynte som tallet 10, s\u00e5 blir koden inni gjenta -klossen gjentatt ti ganger f\u00f8r nedtelling er blitt 0. I l\u00f8pet disse ti gjentagelsene har ogs\u00e5 programmet tatt ti pauser p\u00e5 1 millisekund hver. Det betyr at vi har laget en nedtelling som totalt varer i 10 millisekund. Steg 4: Lage reglene for n\u00e5r en spiller vinner eller taper I denne delen skal vi kode reglene for reaksjonspillet ved \u00e5 bruke klosser fra Logikk kategorien. Vi \u00f8nsker at n\u00e5r en spiller er den f\u00f8rste til \u00e5 trykke p\u00e5 sin knapp n\u00e5r firkanten vises p\u00e5 skjermen vinner spillet. Vi \u00f8nsker ogs\u00e5 \u00e5 kode en regel som gj\u00f8r at hvis en spiller trykker p\u00e5 sin knapp f\u00f8r firkanten er blitt vist, s\u00e5 taper den spilleren som trykket. Begynn med \u00e5 finne en hvis ellers -kloss fra kategorien Logikk . Plasser klossen inni \u00abmunnen\u00bb til n\u00e5r knapp A trykkes -klossen. Pass p\u00e5 at vis skjerm -klossen plasseres inni \u00abmunnen\u00bb under hvis -klossen. input.onButtonPressed(Button.A, function () { if (true) { basic.showLeds(` . . # . . . # . . . # # # # # . # . . . . . # . . `) } else { } }) Finn \u00e5 en 0 = 0 -kloss fra Logikk og plasser den p\u00e5 verdifeltet til hvis ellers -klossen. input.onButtonPressed(Button.A, function () { if (0 == 0) { basic.showLeds(` . . # . . . # . . . # # # # # . # . . . . . # . . `) } else { } }) Plasser s\u00e5 nedtelling -klossen fra variabler p\u00e5 verdifeltet til venstre for er lik i 0 = 0 -klossen. input.onButtonPressed(Button.A, function () { if (nedtelling == 0) { basic.showLeds(` . . # . . . # . . . # # # # # . # . . . . . # . . `) } else { basic.showLeds(` . . # . . . . . # . # # # # # . . . # . . . # . . `) } }) Gjenta s\u00e5 Steg 5 fra begynnelsen for n\u00e5r knapp B trykkes -klossen. input.onButtonPressed(Button.B, function () { if (nedtelling == 0) { basic.showLeds(` . . # . . . . . # . # # # # # . . . # . . . # . . `) } else { basic.showLeds(` . . # . . . # . . . # # # # # . # . . . . . # . . `) } }) Pass p\u00e5! Husk at pilene er omvendt i n\u00e5r knapp B trykkes -klossen sammenlignet med n\u00e5r knapp A trykkes -klossen. Test programmet Skjekke om spillet kj\u00f8rer Test programmet Overf\u00f8r det ferdige programmet til Micro Biten ved \u00e5 bruke en USB-kabel eller Bl\u00e5tann. Sp\u00f8r en l\u00e6rer om hjelp hvis du er usikker. Rist p\u00e5 terningen din og sjekk at programmet fungerer riktig. Gratulerer, du har n\u00e5 laget et reaksjonspill. Start spillet med \u00e5 trykke p\u00e5 A og B-knappene p\u00e5 Micro Biten samtidig. Hvem er raskest av deg og en venn? Utfordring Spillet v\u00e5rt kan f\u00e5 flere funksjoner. Se om du kan legge til en nedtelling f\u00f8r spillet begynner p\u00e5 egenh\u00e5nd. Eller se om du klarer \u00e5 programmere ved \u00e5 bruke boolske variabler slik at hvis en spiller trykker for tidlig s\u00e5 taper han eller henne. Det finnes mange forskjellige programmeringssider og -apper for Micro Bit. Bruk den siden eller appen som du har l\u00e6rt i undervisningen.","title":"Reaksjonsspill for to spillere med Micro Bit"},{"location":"prosjekter/microbit/reaksjonsspill/#reaksjonsspill-for-to-spillere-med-micro-bit","text":"","title":"Reaksjonsspill for to spillere med Micro Bit"},{"location":"prosjekter/microbit/reaksjonsspill/#introduksjon","text":"Dette er en oppskrift som passer for deg som har programmert litt p\u00e5 Micro Bit fra f\u00f8r. Oppskriften tar en time \u00e5 gjennomf\u00f8re. Du skal i denne oppskriften skal du lage et reaksjonsspill. Du vil i reaksjonsspillet spille en-mot-en og den som tykker f\u00f8rst p\u00e5 sin knapp n\u00e5r en firkant vises p\u00e5 skjermen vinner! Du vil l\u00e6re \u00e5 vise bilder p\u00e5 skjermen til Micro Biten \u00e5 f\u00e5 Micro Biten til \u00e5 gj\u00f8re noe n\u00e5r en knapp trykkes \u00e5 bruke en variabel til \u00e5 lage en nedtelling \u00e5 kode regler for et spill Du trenger en Micro Bit en USB-kabel til overf\u00f8ring en batteripakke med to AAA-batterier","title":"Introduksjon"},{"location":"prosjekter/microbit/reaksjonsspill/#steg-1-vis-en-firkant-pa-skjermen-nar-du-trykker-pa-to-knapper","text":"Begynn med \u00e5 g\u00e5 til MakeCode for micro:bit . 1 Start et nytt prosjekt ved \u00e5 trykke p\u00e5 knappen Nytt Prosjekt . Da vil nettsiden der du programmerer Micro Biten \u00e5pnes. Gi prosjektet navnet Reaksjonsspill ved \u00e5 skrive i tekstfeltet nederst p\u00e5 nettsiden. N\u00e5 skal vi kode! Det f\u00f8rste vi vil er \u00e5 vise en firkant p\u00e5 skjermen til Micro Biten n\u00e5r du trykker A og B-knappene samtidig. Begynn med \u00e5 dra en gjenta for alltid -kloss fra kategorien Basis og slipp den p\u00e5 l\u00e6rretet til h\u00f8yre p\u00e5 nettsiden. basic.forever(function () { }) Finn en hvis sann -kloss fra kategorien L\u00f8kker . Slipp hvis sann -klossen inni munnen til gjenta for alltid -klossen. basic.forever(function () { if (true) { } }) Etterp\u00e5 tar du en knapp A trykkes -kloss fra kategorien Inndata og plasserer den p\u00e5 verdifeltet til hvis sann -klossen. basic.forever(function () { if (input.buttonIsPressed(Button.A)) { } }) Vi vil at Micro Biten skal gj\u00f8re noe n\u00e5r knappene A og B trykkes samtidig. For \u00e5 f\u00e5 til dette m\u00e5 vi skifte A i knapp A trykkes -klossen til A+B . Trykk p\u00e5 bokstaven A p\u00e5 knapp A trykkes -klossen. Du vil da f\u00e5 opp en rullegardinmeny. Trykk p\u00e5 A+B i rullegardinmenyen for \u00e5 velge den. basic.forever(function () { if (input.buttonIsPressed(Button.AB)) { } }) N\u00e5r knappene A og B trykkes samtidig skal Micro Biten vise en liten firkant p\u00e5 skjermen. f\u00f8rst finner du vis ikon -klossen i kategorien Basis og plasser den i \u00abmunnen\u00bb til hvis -klossen. basic.forever(function () { if (input.buttonIsPressed(Button.AB)) { basic.showIcon(IconNames.Heart) } }) Trykk p\u00e5 bildet av hjertet p\u00e5 vis ikon -klossen. Du vil da f\u00e5 opp en rullegardinmeny som inneholder mange forskjellige ikoner. Trykk p\u00e5 bildet av en liten firkant helt nederst i rullegardinmenyen. basic.forever(function () { if (input.buttonIsPressed(Button.AB)) { basic.showIcon(IconNames.SmallSquare) } }) Micro Biten skal vise den lille firkanten p\u00e5 skjermen p\u00e5 et tilfeldig tidspunkt n\u00e5r A og B knappene trykkes samtidig. For \u00e5 f\u00e5 til dette m\u00e5 du f\u00f8rst finne klossen pause i kategorien Basis . Plasser den over vis ikon -klossen. basic.forever(function () { if (input.buttonIsPressed(Button.AB)) { basic.pause(100) basic.showIcon(IconNames.SmallSquare) } }) Finn s\u00e5 velg tilfeldig -klossen i kategorien Matematikk og plasser den i verdifeltet til pause -klossen. Skift s\u00e5 verdien 10 i velg tilfeldig -klossen til 3000 . basic.forever(function () { if (input.buttonIsPressed(Button.AB)) { basic.pause(Math.randomRange(0, 3000)) basic.showIcon(IconNames.SmallSquare) } }) Hva er et millisekund (ms)? Du la kanskje merke til at det st\u00e5r (ms) p\u00e5 pause -klossen? Datamaskiner arbeider veldig raskt og derfor, n\u00e5r vi skal fortelle den om hvor lenge den skal ta en pause, m\u00e5 vi bruke millisekund. Et millisekund er et tusenedelssekund. Det betyr at 3000 millisekunder er det samme som 3 sekunder. Til slutt s\u00e5 m\u00e5 vi fortelle Micro Biten at skjermen skal t\u00f8mmes hver gang vi trykker A og B knappene samtidig. \u00c5 t\u00f8mme skjermen betyr \u00e5 fjerne alt som vises p\u00e5 den. Hvis vi ikke forteller Micro Biten at skjermen skal t\u00f8mmes s\u00e5 vil den lille firkanten vises hele tiden. Finn t\u00f8m skjerm -klossen. For \u00e5 finne denne klossen m\u00e5 du f\u00f8rst trykke p\u00e5 kategorien Basis . N\u00e5r du har trykket p\u00e5 den vil det komme en ny kategori under Basis som heter \u22ef more . Trykk p\u00e5 den nye kategorien for \u00e5 finne t\u00f8m skjerm -klossen. Plasser t\u00f8m skjerm -klossen over velg tilfeldig -klossen. basic.forever(function () { if (input.buttonIsPressed(Button.AB)) { basic.clearScreen() basic.pause(Math.randomRange(0, 3000)) basic.showIcon(IconNames.SmallSquare) } }) Test programmet Til venstre er det bilde av en Micro Bit. Denne kan du bruke til \u00e5 teste programmet ditt mens du koder. Trykk p\u00e5 den hvite sirkelen ved siden av A+B . Da tror Micro Biten at du trykker p\u00e5 A og B knappene samtidig og en liten firkant vil vises p\u00e5 skjermen. Firkanten vil dukke opp p\u00e5 forskjellige tidspunkt mellom 0 og 3 sekunder. Det virker ikke! Viser ikke den lille firkanten n\u00e5r du trykker p\u00e5 A+B knappen p\u00e5 Micro Biten? For \u00e5 finne feilen b\u00f8r du lese oppskriften om igjen og se n\u00f8ye p\u00e5 bildene om du har glemt noe. En vanlig feil er \u00e5 glemme \u00e5 skifte A til A+B p\u00e5 n\u00e5r trykkes -klossen. Utfordring Micro Biten viser n\u00e5 den lille firkanten p\u00e5 et tilfeldig tidspunkt mellom 0 og 3 sekunder. Hvis du vil at Micro Biten skal vise den lille firkanten p\u00e5 et tilfeldig tidspunkt mellom 0 og 5 sekunder, hva tall skal da st\u00e5 i stedet for 3000 i velg tilfeldig -klossen?","title":"Steg 1: Vis en firkant p\u00e5 skjermen n\u00e5r du trykker p\u00e5 to knapper"},{"location":"prosjekter/microbit/reaksjonsspill/#steg-2-legge-til-to-spillere","text":"Micro Biten viser n\u00e5 en firkant p\u00e5 et tilfeldig tidspunkt n\u00e5r du trukker p\u00e5 A og B knappen samtidig. N\u00e5 skal vi kode reglene til reaksjonspillet. Vi vil at den som trykker f\u00f8rst p\u00e5 sin knapp n\u00e5r firkanten vises p\u00e5 skjermen vinner spillet. Hent to n\u00e5r knapp A trykkes -klosser fra kategorien Inndata . Plasser disse klossene p\u00e5 l\u00e6rretet. Skift A p\u00e5 den ene n\u00e5r knapp A trykkes -klossen til B . input.onButtonPressed(Button.A, function () { }) input.onButtonPressed(Button.B, function () { }) Plasser en vis bilde -kloss i munnen p\u00e5 hver av de rosa n\u00e5r trykkes -klossene. input.onButtonPressed(Button.A, function () { basic.showLeds(` . . . . . . . . . . . . . . . . . . . . . . . . . `) }) input.onButtonPressed(Button.B, function () { basic.showLeds(` . . . . . . . . . . . . . . . . . . . . . . . . . `) }) Tegn piler p\u00e5 vis bilde -klossene ved \u00e5 trykke p\u00e5 de sm\u00e5 firkantene. input.onButtonPressed(Button.A, function () { basic.showLeds(` . . # . . . # . . . # # # # # . # . . . . . # . . `) }) input.onButtonPressed(Button.B, function () { basic.showLeds(` . . # . . . . . # . # # # # # . . . # . . . # . . `) }) Test programmet Test programmet ved \u00e5 trykke p\u00e5 A+B p\u00e5 Micro Biten til venstre p\u00e5 skjermen. Hva skjer om du tryker p\u00e5 A-knappen f\u00f8r firkanten kommer frem p\u00e5 skjermen p\u00e5 Micro Biten? Pr\u00f8v s\u00e5 \u00e5 trykke p\u00e5 A-knappen og etterp\u00e5 trykk p\u00e5 B-knappen.","title":"Steg 2: Legge til to spillere"},{"location":"prosjekter/microbit/reaksjonsspill/#steg-3-bruke-en-variabel-for-a-huske-en-nedtelling","text":"N\u00e5r du testet programmet p\u00e5 slutten av forrige steg s\u00e5 la du kanskje merke til noe merkelig? Slik vi har kodet reaksjonspillet n\u00e5 s\u00e5 har det ikke noe \u00e5 si om firkanten har blitt vist p\u00e5 skjermen eller ikke. Pilen vil vise at du vant uansett. Dette m\u00e5 vi fikse. For \u00e5 l\u00f8se dette m\u00e5 vi lage en nedtelling som teller ned til n\u00e5r firkanten vises p\u00e5 skjermen. For \u00e5 huske hvor mye som er igjen av tiden til firkanten vises p\u00e5 skjermen m\u00e5 vi bruke en variabel. Trykk p\u00e5 kategorien Variabler og s\u00e5 p\u00e5 den gr\u00e5 knappen Lag en variabel . Variabelen gir du navnet nedtelling . Dra s\u00e5 en sett nedtelling til -kloss ut i l\u00e6rretet og plasser den over pause -klossen. basic.forever(function () { if (input.buttonIsPressed(Button.AB)) { basic.clearScreen() nedtelling = 0 basic.pause(Math.randomRange(0, 3000)) basic.showIcon(IconNames.SmallSquare) } }) Hva er en variabel? Variabler brukes i programmer for \u00e5 huske noe til senere. En variabel kan v\u00e6re et tall eller en setning. Det er v\u00e6re mange grunner til at programmer m\u00e5 huske noe. En grunn for at et program skal huske et tall som skal brukes i et regnestykke senere i programmet. Dra den lilla velg tilfeldig tall -klossen fra verdifeltet til pause -klossen og slipp den p\u00e5 verdifeltet til sett nedtelling til -klossen. basic.forever(function () { if (input.buttonIsPressed(Button.AB)) { basic.clearScreen() nedtelling = Math.randomRange(0, 3000) basic.pause(100) basic.showIcon(IconNames.SmallSquare) } }) Ta en hvis sann -kloss fra kategorien Logikk og plasser den under vis ikon -klossen, men pass p\u00e5 at hvis -klossen er inni munnen til den bl\u00e5 gjenta for alltid -klossen. basic.forever(function () { if (input.buttonIsPressed(Button.AB)) { basic.clearScreen() nedtelling = Math.randomRange(0, 3000) basic.pause(100) basic.showIcon(IconNames.SmallSquare) if (true) { } } }) Finn s\u00e5 en 0 = 0 -kloss fra kategorien Logikk og plasser den over sann i hvis sann -klossen. let nedtelling = 0 basic.forever(function () { if (input.buttonIsPressed(Button.AB)) { basic.clearScreen() nedtelling = Math.randomRange(0, 3000) basic.pause(100) basic.showIcon(IconNames.SmallSquare) if (0 == 0) { } } }) Trykk p\u00e5 = p\u00e5 0 = 0 -klossen for \u00e5 f\u00e5 frem rullegardinmenyen og skift tegnet til . let nedtelling = 0 basic.forever(function () { if (input.buttonIsPressed(Button.AB)) { basic.clearScreen() nedtelling = Math.randomRange(0, 3000) basic.pause(100) basic.showIcon(IconNames.SmallSquare) if (0 0) { } } }) Ta en nedtelling -kloss fra Variabler og plasser den p\u00e5 0 som er til venstre p\u00e5 0 = 0 -klossen. let nedtelling = 0 basic.forever(function () { if (input.buttonIsPressed(Button.AB)) { basic.clearScreen() nedtelling = Math.randomRange(0, 3000) basic.pause(100) basic.showIcon(IconNames.SmallSquare) if (nedtelling 0) { } } }) Flytt pause -klossen og plasser den i \u00abmunnen\u00bb til hvis nedtelling 0 -klossen. Skift verdien i verdifeltet p\u00e5 pause -klossen til 1 . Etterp\u00e5 flytter du vis ikon -klossen under hvis nedtelling 0 -klossen. Hvordan flytte kun en kloss Du kan flytte en kloss som henger fast andre klosser. For \u00e5 gj\u00f8re det m\u00e5 du holde nede ctrl -tasten p\u00e5 tastaturet n\u00e5r du flytter klossen. let nedtelling = 0 basic.forever(function () { if (input.buttonIsPressed(Button.AB)) { basic.clearScreen() nedtelling = Math.randomRange(0, 3000) if (nedtelling 0) { basic.pause(100) } basic.showIcon(IconNames.SmallSquare) } }) Til slutt henter du en endre nedtelling med -kloss fra variabler og plasserer den under pause -klossen. Pass p\u00e5 at b\u00e5de pause -klossen og endre nedtelling med -klossen er inni \u00abmunnen\u00bb til hvis nedtelling 0 -klossen. let nedtelling = 0 basic.forever(function () { if (input.buttonIsPressed(Button.AB)) { basic.clearScreen() nedtelling = Math.randomRange(0, 3000) if (nedtelling 0) { basic.pause(100) nedtelling += 1 } basic.showIcon(IconNames.SmallSquare) } }) Endre verdien i verdifeltet til pause -klossen til 1 og verditeltet til endre nedtelling med -klossen til -1. let nedtelling = 0 basic.forever(function () { if (input.buttonIsPressed(Button.AB)) { basic.clearScreen() nedtelling = Math.randomRange(0, 3000) if (nedtelling 0) { basic.pause(1) nedtelling += -1 } basic.showIcon(IconNames.SmallSquare) } }) Hvordan fungerer nedtellingen? Vi bruker variabelen nedtelling til \u00e5 huske et tilfeldig valgt tall mellom 0 og 3000. La oss si at tallet 10 var det tilfeldige tallet som ble valgt. I neste steg av koden g\u00e5r programmet inn i en gjenta -kloss. I begynnelsen av denne klossen skjekker gjenta -klossen om variabelen nedtelling er st\u00f8rre enn 0. Variabelen nedtelling er 10, derfor fortsetter programmet inn i \u00abmunnen\u00bb til gjenta -klossen. Her tar programmet en pause p\u00e5 1 millisekund. Etter pausen tar programmet og forandrer nedtelling med -1. Variabelen nedtelling er n\u00e5 tallet 9. I det siste steget g\u00e5r programmet tilbake til toppen av gjenta -klossen og skjekker om nedtelling er st\u00f8rre enn 0. Variabelen nedtelling er n\u00e5 9, s\u00e5 den gjentar koden inni \u00abmunnen\u00bb p\u00e5 gjenta -klossen p\u00e5 ny. Dette fortsetter helt til variabelen nedtelling er 0. Da vil programmet g\u00e5 videre i koden og vise firkanten p\u00e5 skjermen som er plassert under gjenta -klossen. Fordi variabelen nedtelling begynte som tallet 10, s\u00e5 blir koden inni gjenta -klossen gjentatt ti ganger f\u00f8r nedtelling er blitt 0. I l\u00f8pet disse ti gjentagelsene har ogs\u00e5 programmet tatt ti pauser p\u00e5 1 millisekund hver. Det betyr at vi har laget en nedtelling som totalt varer i 10 millisekund.","title":"Steg 3: Bruke en variabel for \u00e5 huske en nedtelling"},{"location":"prosjekter/microbit/reaksjonsspill/#steg-4-lage-reglene-for-nar-en-spiller-vinner-eller-taper","text":"I denne delen skal vi kode reglene for reaksjonspillet ved \u00e5 bruke klosser fra Logikk kategorien. Vi \u00f8nsker at n\u00e5r en spiller er den f\u00f8rste til \u00e5 trykke p\u00e5 sin knapp n\u00e5r firkanten vises p\u00e5 skjermen vinner spillet. Vi \u00f8nsker ogs\u00e5 \u00e5 kode en regel som gj\u00f8r at hvis en spiller trykker p\u00e5 sin knapp f\u00f8r firkanten er blitt vist, s\u00e5 taper den spilleren som trykket. Begynn med \u00e5 finne en hvis ellers -kloss fra kategorien Logikk . Plasser klossen inni \u00abmunnen\u00bb til n\u00e5r knapp A trykkes -klossen. Pass p\u00e5 at vis skjerm -klossen plasseres inni \u00abmunnen\u00bb under hvis -klossen. input.onButtonPressed(Button.A, function () { if (true) { basic.showLeds(` . . # . . . # . . . # # # # # . # . . . . . # . . `) } else { } }) Finn \u00e5 en 0 = 0 -kloss fra Logikk og plasser den p\u00e5 verdifeltet til hvis ellers -klossen. input.onButtonPressed(Button.A, function () { if (0 == 0) { basic.showLeds(` . . # . . . # . . . # # # # # . # . . . . . # . . `) } else { } }) Plasser s\u00e5 nedtelling -klossen fra variabler p\u00e5 verdifeltet til venstre for er lik i 0 = 0 -klossen. input.onButtonPressed(Button.A, function () { if (nedtelling == 0) { basic.showLeds(` . . # . . . # . . . # # # # # . # . . . . . # . . `) } else { basic.showLeds(` . . # . . . . . # . # # # # # . . . # . . . # . . `) } }) Gjenta s\u00e5 Steg 5 fra begynnelsen for n\u00e5r knapp B trykkes -klossen. input.onButtonPressed(Button.B, function () { if (nedtelling == 0) { basic.showLeds(` . . # . . . . . # . # # # # # . . . # . . . # . . `) } else { basic.showLeds(` . . # . . . # . . . # # # # # . # . . . . . # . . `) } }) Pass p\u00e5! Husk at pilene er omvendt i n\u00e5r knapp B trykkes -klossen sammenlignet med n\u00e5r knapp A trykkes -klossen. Test programmet","title":"Steg 4: Lage reglene for n\u00e5r en spiller vinner eller taper"},{"location":"prosjekter/microbit/reaksjonsspill/#skjekke-om-spillet-kjrer","text":"Test programmet Overf\u00f8r det ferdige programmet til Micro Biten ved \u00e5 bruke en USB-kabel eller Bl\u00e5tann. Sp\u00f8r en l\u00e6rer om hjelp hvis du er usikker. Rist p\u00e5 terningen din og sjekk at programmet fungerer riktig. Gratulerer, du har n\u00e5 laget et reaksjonspill. Start spillet med \u00e5 trykke p\u00e5 A og B-knappene p\u00e5 Micro Biten samtidig. Hvem er raskest av deg og en venn? Utfordring Spillet v\u00e5rt kan f\u00e5 flere funksjoner. Se om du kan legge til en nedtelling f\u00f8r spillet begynner p\u00e5 egenh\u00e5nd. Eller se om du klarer \u00e5 programmere ved \u00e5 bruke boolske variabler slik at hvis en spiller trykker for tidlig s\u00e5 taper han eller henne. Det finnes mange forskjellige programmeringssider og -apper for Micro Bit. Bruk den siden eller appen som du har l\u00e6rt i undervisningen.","title":"Skjekke om spillet kj\u00f8rer"},{"location":"prosjekter/microbit/terning/","text":"Lag en terning med Micro Bit Introduksjon Dette er en oppgave som passer godt for nybegynnere og den tar en time \u00e5 gjennomf\u00f8re. Du skal i denne oppgaven programmere Micro Biten til \u00e5 bli en terning. Micro Biten har en sensor som gj\u00f8r at den kan merkes om den ristes. Den skal vi bruke til \u00e5 lage v\u00e5r egen Micro Bit-terning! Du vil l\u00e6re \u00e5 f\u00e5 Micro Biten til \u00e5 gj\u00f8re noe n\u00e5r den ristes \u00e5 lage en animasjon p\u00e5 skjermen til Micro Biten \u00e5 bruke en variabel til \u00e5 huske et tall Du trenger en Micro Bit en USB-kabel til overf\u00f8ring en batteripakke med to AAA-batterier en utskrift av brettspillet Snakes and Ladders per to elever Steg 1: Sl\u00e5 en terning Begynn med \u00e5 g\u00e5 til MakeCode for micro:bit . Start et nytt prosjekt ved \u00e5 trykke p\u00e5 knappen Nytt Prosjekt . Da vil nettsiden der du programmerer Micro Biten \u00e5pnes. Gi prosjektet navnet Terning ved \u00e5 skrive i tekstfeltet nederst p\u00e5 nettsiden. Slett alle klossene som ligger i l\u00e6rretet. Du sletter en kloss ved \u00e5 dra den til venstre. N\u00e5r det dukker opp et s\u00f8plespann slipper du klossen for \u00e5 slette den. N\u00e5 skal vi kode! Vi vil at Micro Biten skal gj\u00f8re noe n\u00e5r du rister den. Begynn med \u00e5 dra klossen n\u00e5r ristes fra kategorien Inndata og slipp den p\u00e5 l\u00e6rretet til h\u00f8yre p\u00e5 nettsiden. input.onGesture(Gesture.Shake, function () { }) N\u00e5r Micro Biten ristes skal den vise et tall p\u00e5 skjermen. For \u00e5 f\u00e5 til dette m\u00e5 du dra klossen vis tall fra kategorien Basis og plassere den i munnen til n\u00e5r ristes . input.onGesture(Gesture.Shake, function () { basic.showNumber(0) }) Micro Biten skal vise et tilfeldig tall p\u00e5 skjermen n\u00e5r den ristes. For \u00e5 kode dette m\u00e5 du plassere klossen velg tilfeldig fra kategorien Matematikk p\u00e5 verdifeltet til vis tall . input.onGesture(Gesture.Shake, function () { basic.showNumber(Math.randomRange(0, 10)) }) En terning har \u00f8yne fra 1 til 6. Men velg tilfedig har som standard et at den velger et tilfeldig tall fra 0 til 10. For at Micro Biten skal vise riktige tall for en terning m\u00e5 du skifte verdiene til 1 og 6. input.onGesture(Gesture.Shake, function () { basic.showNumber(Math.randomRange(1, 6)) }) Test programmet Til venstre p\u00e5 MakeCode er det et bilde av en Micro Bit. Denne kan du bruke til \u00e5 teste programmet ditt mens du koder. Trykk p\u00e5 den hvite sirkelen ved siden av SHAKE . Da tror Micro Biten at du rister den, og den vil vise ett tilfeldig tall mellom 1 til 6. Det virker ikke! Hvis Micro Biten ikke viser et tall mellom 1 til 6 hver gang du trykker SHAKE s\u00e5 er noe galt i koden din. For \u00e5 finne feilen b\u00f8r du lese oppskriften om igjen og se n\u00f8ye p\u00e5 bildene. En vanlig feil er \u00e5 glemme \u00e5 skifte tallene i velg tilfeldig til 1 og 6. Utfordring Vanlige terninger har \u00f8yne fra 1 til 6. Men noen terninger har \u00f8yne fra 1 til 20. Disse kalles for D20-terninger. Hva m\u00e5 du forandre i koden du har skrevet for \u00e5 f\u00e5 Micro Biten til \u00e5 fungere som en D20-terning? Steg 2: Lage en enkel terninganimasjon Terningen v\u00e5r fungerer n\u00e5, men den er litt kjedelig. Det ville v\u00e6rt mye morsommere om terningen viste forskjellige tall f\u00f8r den til slutt landet p\u00e5 et tall slik som en ekte terning. For \u00e5 f\u00e5 til dette m\u00e5 du lage en animasjon. Hent klossen gjenta fra kategorien L\u00f8kker og plasser den rundt vis tall i koden din. input.onGesture(Gesture.Shake, function () { for (let i = 0; i 4; i++) { basic.showNumber(Math.randomRange(1, 6)) } }) Skift tallet i verdifeltet til gjenta fra 4 til 5. input.onGesture(Gesture.Shake, function () { for (let i = 0; i 5; i++) { basic.showNumber(Math.randomRange(1, 6)) } }) Hva gj\u00f8r klossen gjenta ? Denne klossen gjentar koden som plasseres i munnen til klossen. Antall ganger gjenta gjentar koden bestemmes av tallet som st\u00e5r i verdifeltet. Det finnes forkjellige typer gjenta-klosser. Du kan se alle typene som finnes i MakeCode ved \u00e5 trykke p\u00e5 kategorien L\u00f8kker . Hvis du tester programmet ditt n\u00e5 vil se du at tallene p\u00e5 skjermen til Micro Biten skifter veldig fort. Det er rett og slett vanskelig \u00e5 se dem. For \u00e5 f\u00e5 hvert tall til \u00e5 vises lengre p\u00e5 skjermen m\u00e5 vi legge til en pause. Dra klossen pause fra kategorien Basis og plasser den under vis tall . Pass p\u00e5 at pause er inni munnen til gjenta . input.onGesture(Gesture.Shake, function () { for (let i = 0; i 5; i++) { basic.showNumber(Math.randomRange(1, 6)) basic.pause(100) } }) Test programmet Bruk Micro Biten p\u00e5 nettsiden til \u00e5 teste programmet ditt. Trykk p\u00e5 den hvite sirkelen ved siden av SHAKE . Microbiten skal da vise fem tilfeldige tall p\u00e5 skjermen for hver gang du trykker SHAKE . Utfordring Hva m\u00e5 du forandre i koden din for \u00e5 f\u00e5 Micro Biten til \u00e5 kun vise tre tilfeldige tall hver gang du trykker p\u00e5 SHAKE ? Steg 3: F\u00e5 terningkastet til \u00e5 blinke Terningen fungerer n\u00e5, men det kan v\u00e6re vanskelig \u00e5 se hva tall terningen lander p\u00e5 til slutt. Det kan vi gj\u00f8re tydeligere ved \u00e5 lage en ny animasjon som f\u00e5r tallet terningen lander p\u00e5 til \u00e5 blinke. Begynn med \u00e5 ta en ny gjenta fra kategorien L\u00f8kker . Plasser den under klossen gjenta som allerede er i programmet. Skift tallet 4 til 3 i verdifeltet til den nye klossen. input.onGesture(Gesture.Shake, function () { for (let i = 0; i 5; i++) { basic.showNumber(Math.randomRange(1, 6)) basic.pause(100) } for (let i = 0; i 3; i++) { } }) For \u00e5 f\u00e5 tallet til \u00e5 blike p\u00e5 Micro Biten trenger du noen flere klosser. Finn f\u00f8rst klossen t\u00f8m skjerm . For \u00e5 finne denne klossen m\u00e5 du f\u00f8rst trykke p\u00e5 kategorien Basis . N\u00e5r du har trykket p\u00e5 kategorien vil det komme en ny kategori under Basis som heter \u22ef more . Trykk p\u00e5 den nye kategorien for \u00e5 finne t\u00f8m skjerm . input.onGesture(Gesture.Shake, function () { for (let i = 0; i 5; i++) { basic.showNumber(Math.randomRange(1, 6)) basic.pause(100) } for (let i = 0; i 3; i++) { basic.clearScreen() } }) Hva gj\u00f8r klossen t\u00f8m skjerm ? Denne klossen skrur av alle lysene p\u00e5 skjermen til Micro Biten. Det er en kloss som er fin \u00e5 bruke hvis du vil vise noe p\u00e5 skjermen og s\u00e5 ta det vekk etterp\u00e5. N\u00e5 skal vi finne tre klosser p\u00e5 en gang, men heldigvis kommer alle fra samme kategori. F\u00f8rst finner du klossen pause fra kategorien Basis . Ta s\u00e5 en vis tall fra samme kategori. Til slutt trenger du enda en pause . input.onGesture(Gesture.Shake, function () { for (let i = 0; i 5; i++) { basic.showNumber(Math.randomRange(1, 6)) basic.pause(100) } for (let i = 0; i 3; i++) { basic.clearScreen() basic.pause(100) basic.showNumber(0) basic.pause(100) } }) Test programmet Bruk simulatoren p\u00e5 MakeCode til \u00e5 teste programmet ditt. Trykk p\u00e5 SHAKE p\u00e5 Micro Biten og se hva som skjer! Det virker ikke! Hvis du testet programmet ditt i simulatoren s\u00e5 vil du ha sett en feil i koden. Det var kun tallet 0 som blinket, og ikke terningkastet. Det skal vi fikse n\u00e5. Steg 4: Huske et terningkast med en variabel Heldigvis finnes det en m\u00e5te \u00e5 f\u00e5 Micro Biten til \u00e5 huske det siste tallet i animasjonen til terningen. Vi m\u00e5 bruke en variabel. For \u00e5 lage en variabel trykker du p\u00e5 kategorien Variabler . Trykk s\u00e5 p\u00e5 knappen Lag en ny variabel . Du vil f\u00e5 sp\u00f8rsm\u00e5l om hva du vil kalle variabelen din, kall den for terningkast og trykk p\u00e5 Ok . Hva er en variabel? Variabler brukes i programmer for \u00e5 huske noe til senere. En variabel kan v\u00e6re et tall eller en setning. Det er v\u00e6re mange grunner til at programmer m\u00e5 huske noe. En grunn for at et program skal huske et tall som skal brukes i et regnestykke senere i programmet. Etter at du har laget variabelen terningkast vil det komme noen nye klosser i kategorien Variabel . Finn klossen som heter sett terningkast til og plasser den over vis tall . Pass p\u00e5 at sett terningkast til er i munnen til gjenta . let terningkast = 0 input.onGesture(Gesture.Shake, function () { for (let i = 0; i 5; i++) { terningkast = 0 basic.showNumber(Math.randomRange(1, 6)) basic.pause(100) } for (let i = 0; i 3; i++) { basic.clearScreen() basic.pause(100) basic.showNumber(0) basic.pause(100) } }) Dra klossen velg tilfeldig vekk fra verdifeltet til vis tall og slipp den ned p\u00e5 verdifeltet til sett terningkast til . let terningkast = 0 input.onGesture(Gesture.Shake, function () { for (let i = 0; i 5; i++) { terningkast = Math.randomRange(1, 6) basic.showNumber(0) basic.pause(100) } for (let i = 0; i 3; i++) { basic.clearScreen() basic.pause(100) basic.showNumber(0) basic.pause(100) } }) Hent to terningkast fra kategorien Variabler og plasser dem p\u00e5 vedrifeltet til vis tall i programmet. let terningkast = 0 input.onGesture(Gesture.Shake, function () { for (let i = 0; i 5; i++) { terningkast = Math.randomRange(1, 6) basic.showNumber(terningkast) basic.pause(100) } for (let i = 0; i 3; i++) { basic.clearScreen() basic.pause(100) basic.showNumber(terningkast) basic.pause(100) } }) Test programmet Overf\u00f8r det ferdige programmet til Micro Biten ved \u00e5 bruke en USB-kabel eller Bl\u00e5tann. Sp\u00f8r en voksen eller venn om hjelp hvis du er usikker. Rist p\u00e5 terningen din og sjekk at programmet fungerer riktig. Gratulerer, du har n\u00e5 laget en terning med Micro Biten! Da er det p\u00e5 tide \u00e5 teste terningen din med \u00e5 spille brettspillet Snakes and Ladders. G\u00e5 sammen to-og-to og se hvem som klarer \u00e5 vinne! Kode","title":"Lag en terning"},{"location":"prosjekter/microbit/terning/#lag-en-terning-med-micro-bit","text":"","title":"Lag en terning med Micro Bit"},{"location":"prosjekter/microbit/terning/#introduksjon","text":"Dette er en oppgave som passer godt for nybegynnere og den tar en time \u00e5 gjennomf\u00f8re. Du skal i denne oppgaven programmere Micro Biten til \u00e5 bli en terning. Micro Biten har en sensor som gj\u00f8r at den kan merkes om den ristes. Den skal vi bruke til \u00e5 lage v\u00e5r egen Micro Bit-terning! Du vil l\u00e6re \u00e5 f\u00e5 Micro Biten til \u00e5 gj\u00f8re noe n\u00e5r den ristes \u00e5 lage en animasjon p\u00e5 skjermen til Micro Biten \u00e5 bruke en variabel til \u00e5 huske et tall Du trenger en Micro Bit en USB-kabel til overf\u00f8ring en batteripakke med to AAA-batterier en utskrift av brettspillet Snakes and Ladders per to elever","title":"Introduksjon"},{"location":"prosjekter/microbit/terning/#steg-1-sla-en-terning","text":"Begynn med \u00e5 g\u00e5 til MakeCode for micro:bit . Start et nytt prosjekt ved \u00e5 trykke p\u00e5 knappen Nytt Prosjekt . Da vil nettsiden der du programmerer Micro Biten \u00e5pnes. Gi prosjektet navnet Terning ved \u00e5 skrive i tekstfeltet nederst p\u00e5 nettsiden. Slett alle klossene som ligger i l\u00e6rretet. Du sletter en kloss ved \u00e5 dra den til venstre. N\u00e5r det dukker opp et s\u00f8plespann slipper du klossen for \u00e5 slette den. N\u00e5 skal vi kode! Vi vil at Micro Biten skal gj\u00f8re noe n\u00e5r du rister den. Begynn med \u00e5 dra klossen n\u00e5r ristes fra kategorien Inndata og slipp den p\u00e5 l\u00e6rretet til h\u00f8yre p\u00e5 nettsiden. input.onGesture(Gesture.Shake, function () { }) N\u00e5r Micro Biten ristes skal den vise et tall p\u00e5 skjermen. For \u00e5 f\u00e5 til dette m\u00e5 du dra klossen vis tall fra kategorien Basis og plassere den i munnen til n\u00e5r ristes . input.onGesture(Gesture.Shake, function () { basic.showNumber(0) }) Micro Biten skal vise et tilfeldig tall p\u00e5 skjermen n\u00e5r den ristes. For \u00e5 kode dette m\u00e5 du plassere klossen velg tilfeldig fra kategorien Matematikk p\u00e5 verdifeltet til vis tall . input.onGesture(Gesture.Shake, function () { basic.showNumber(Math.randomRange(0, 10)) }) En terning har \u00f8yne fra 1 til 6. Men velg tilfedig har som standard et at den velger et tilfeldig tall fra 0 til 10. For at Micro Biten skal vise riktige tall for en terning m\u00e5 du skifte verdiene til 1 og 6. input.onGesture(Gesture.Shake, function () { basic.showNumber(Math.randomRange(1, 6)) }) Test programmet Til venstre p\u00e5 MakeCode er det et bilde av en Micro Bit. Denne kan du bruke til \u00e5 teste programmet ditt mens du koder. Trykk p\u00e5 den hvite sirkelen ved siden av SHAKE . Da tror Micro Biten at du rister den, og den vil vise ett tilfeldig tall mellom 1 til 6. Det virker ikke! Hvis Micro Biten ikke viser et tall mellom 1 til 6 hver gang du trykker SHAKE s\u00e5 er noe galt i koden din. For \u00e5 finne feilen b\u00f8r du lese oppskriften om igjen og se n\u00f8ye p\u00e5 bildene. En vanlig feil er \u00e5 glemme \u00e5 skifte tallene i velg tilfeldig til 1 og 6. Utfordring Vanlige terninger har \u00f8yne fra 1 til 6. Men noen terninger har \u00f8yne fra 1 til 20. Disse kalles for D20-terninger. Hva m\u00e5 du forandre i koden du har skrevet for \u00e5 f\u00e5 Micro Biten til \u00e5 fungere som en D20-terning?","title":"Steg 1: Sl\u00e5 en terning"},{"location":"prosjekter/microbit/terning/#steg-2-lage-en-enkel-terninganimasjon","text":"Terningen v\u00e5r fungerer n\u00e5, men den er litt kjedelig. Det ville v\u00e6rt mye morsommere om terningen viste forskjellige tall f\u00f8r den til slutt landet p\u00e5 et tall slik som en ekte terning. For \u00e5 f\u00e5 til dette m\u00e5 du lage en animasjon. Hent klossen gjenta fra kategorien L\u00f8kker og plasser den rundt vis tall i koden din. input.onGesture(Gesture.Shake, function () { for (let i = 0; i 4; i++) { basic.showNumber(Math.randomRange(1, 6)) } }) Skift tallet i verdifeltet til gjenta fra 4 til 5. input.onGesture(Gesture.Shake, function () { for (let i = 0; i 5; i++) { basic.showNumber(Math.randomRange(1, 6)) } }) Hva gj\u00f8r klossen gjenta ? Denne klossen gjentar koden som plasseres i munnen til klossen. Antall ganger gjenta gjentar koden bestemmes av tallet som st\u00e5r i verdifeltet. Det finnes forkjellige typer gjenta-klosser. Du kan se alle typene som finnes i MakeCode ved \u00e5 trykke p\u00e5 kategorien L\u00f8kker . Hvis du tester programmet ditt n\u00e5 vil se du at tallene p\u00e5 skjermen til Micro Biten skifter veldig fort. Det er rett og slett vanskelig \u00e5 se dem. For \u00e5 f\u00e5 hvert tall til \u00e5 vises lengre p\u00e5 skjermen m\u00e5 vi legge til en pause. Dra klossen pause fra kategorien Basis og plasser den under vis tall . Pass p\u00e5 at pause er inni munnen til gjenta . input.onGesture(Gesture.Shake, function () { for (let i = 0; i 5; i++) { basic.showNumber(Math.randomRange(1, 6)) basic.pause(100) } }) Test programmet Bruk Micro Biten p\u00e5 nettsiden til \u00e5 teste programmet ditt. Trykk p\u00e5 den hvite sirkelen ved siden av SHAKE . Microbiten skal da vise fem tilfeldige tall p\u00e5 skjermen for hver gang du trykker SHAKE . Utfordring Hva m\u00e5 du forandre i koden din for \u00e5 f\u00e5 Micro Biten til \u00e5 kun vise tre tilfeldige tall hver gang du trykker p\u00e5 SHAKE ?","title":"Steg 2: Lage en enkel terninganimasjon"},{"location":"prosjekter/microbit/terning/#steg-3-fa-terningkastet-til-a-blinke","text":"Terningen fungerer n\u00e5, men det kan v\u00e6re vanskelig \u00e5 se hva tall terningen lander p\u00e5 til slutt. Det kan vi gj\u00f8re tydeligere ved \u00e5 lage en ny animasjon som f\u00e5r tallet terningen lander p\u00e5 til \u00e5 blinke. Begynn med \u00e5 ta en ny gjenta fra kategorien L\u00f8kker . Plasser den under klossen gjenta som allerede er i programmet. Skift tallet 4 til 3 i verdifeltet til den nye klossen. input.onGesture(Gesture.Shake, function () { for (let i = 0; i 5; i++) { basic.showNumber(Math.randomRange(1, 6)) basic.pause(100) } for (let i = 0; i 3; i++) { } }) For \u00e5 f\u00e5 tallet til \u00e5 blike p\u00e5 Micro Biten trenger du noen flere klosser. Finn f\u00f8rst klossen t\u00f8m skjerm . For \u00e5 finne denne klossen m\u00e5 du f\u00f8rst trykke p\u00e5 kategorien Basis . N\u00e5r du har trykket p\u00e5 kategorien vil det komme en ny kategori under Basis som heter \u22ef more . Trykk p\u00e5 den nye kategorien for \u00e5 finne t\u00f8m skjerm . input.onGesture(Gesture.Shake, function () { for (let i = 0; i 5; i++) { basic.showNumber(Math.randomRange(1, 6)) basic.pause(100) } for (let i = 0; i 3; i++) { basic.clearScreen() } }) Hva gj\u00f8r klossen t\u00f8m skjerm ? Denne klossen skrur av alle lysene p\u00e5 skjermen til Micro Biten. Det er en kloss som er fin \u00e5 bruke hvis du vil vise noe p\u00e5 skjermen og s\u00e5 ta det vekk etterp\u00e5. N\u00e5 skal vi finne tre klosser p\u00e5 en gang, men heldigvis kommer alle fra samme kategori. F\u00f8rst finner du klossen pause fra kategorien Basis . Ta s\u00e5 en vis tall fra samme kategori. Til slutt trenger du enda en pause . input.onGesture(Gesture.Shake, function () { for (let i = 0; i 5; i++) { basic.showNumber(Math.randomRange(1, 6)) basic.pause(100) } for (let i = 0; i 3; i++) { basic.clearScreen() basic.pause(100) basic.showNumber(0) basic.pause(100) } }) Test programmet Bruk simulatoren p\u00e5 MakeCode til \u00e5 teste programmet ditt. Trykk p\u00e5 SHAKE p\u00e5 Micro Biten og se hva som skjer! Det virker ikke! Hvis du testet programmet ditt i simulatoren s\u00e5 vil du ha sett en feil i koden. Det var kun tallet 0 som blinket, og ikke terningkastet. Det skal vi fikse n\u00e5.","title":"Steg 3: F\u00e5 terningkastet til \u00e5 blinke"},{"location":"prosjekter/microbit/terning/#steg-4-huske-et-terningkast-med-en-variabel","text":"Heldigvis finnes det en m\u00e5te \u00e5 f\u00e5 Micro Biten til \u00e5 huske det siste tallet i animasjonen til terningen. Vi m\u00e5 bruke en variabel. For \u00e5 lage en variabel trykker du p\u00e5 kategorien Variabler . Trykk s\u00e5 p\u00e5 knappen Lag en ny variabel . Du vil f\u00e5 sp\u00f8rsm\u00e5l om hva du vil kalle variabelen din, kall den for terningkast og trykk p\u00e5 Ok . Hva er en variabel? Variabler brukes i programmer for \u00e5 huske noe til senere. En variabel kan v\u00e6re et tall eller en setning. Det er v\u00e6re mange grunner til at programmer m\u00e5 huske noe. En grunn for at et program skal huske et tall som skal brukes i et regnestykke senere i programmet. Etter at du har laget variabelen terningkast vil det komme noen nye klosser i kategorien Variabel . Finn klossen som heter sett terningkast til og plasser den over vis tall . Pass p\u00e5 at sett terningkast til er i munnen til gjenta . let terningkast = 0 input.onGesture(Gesture.Shake, function () { for (let i = 0; i 5; i++) { terningkast = 0 basic.showNumber(Math.randomRange(1, 6)) basic.pause(100) } for (let i = 0; i 3; i++) { basic.clearScreen() basic.pause(100) basic.showNumber(0) basic.pause(100) } }) Dra klossen velg tilfeldig vekk fra verdifeltet til vis tall og slipp den ned p\u00e5 verdifeltet til sett terningkast til . let terningkast = 0 input.onGesture(Gesture.Shake, function () { for (let i = 0; i 5; i++) { terningkast = Math.randomRange(1, 6) basic.showNumber(0) basic.pause(100) } for (let i = 0; i 3; i++) { basic.clearScreen() basic.pause(100) basic.showNumber(0) basic.pause(100) } }) Hent to terningkast fra kategorien Variabler og plasser dem p\u00e5 vedrifeltet til vis tall i programmet. let terningkast = 0 input.onGesture(Gesture.Shake, function () { for (let i = 0; i 5; i++) { terningkast = Math.randomRange(1, 6) basic.showNumber(terningkast) basic.pause(100) } for (let i = 0; i 3; i++) { basic.clearScreen() basic.pause(100) basic.showNumber(terningkast) basic.pause(100) } }) Test programmet Overf\u00f8r det ferdige programmet til Micro Biten ved \u00e5 bruke en USB-kabel eller Bl\u00e5tann. Sp\u00f8r en voksen eller venn om hjelp hvis du er usikker. Rist p\u00e5 terningen din og sjekk at programmet fungerer riktig. Gratulerer, du har n\u00e5 laget en terning med Micro Biten! Da er det p\u00e5 tide \u00e5 teste terningen din med \u00e5 spille brettspillet Snakes and Ladders. G\u00e5 sammen to-og-to og se hvem som klarer \u00e5 vinne!","title":"Steg 4: Huske et terningkast med en variabel"},{"location":"prosjekter/microbit/terning/#kode","text":"","title":"Kode"}]}